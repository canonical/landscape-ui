import{p as j,q as x,f as O,s as _,h as E,r as V,j as G,g as C,t as h,k as b}from"./index-D7L52Usx.js";import{u as Q}from"./useRoles-DdWq_js7.js";import{g as w,a as B,b as k,c as I}from"./index-CFDp_0jv.js";import{P as v,A as $}from"./AccessGroupBlock-D9w5DHmf.js";import{S as D}from"./SidePanelFormButtons-DZRMrQBu.js";import"./useFetchOld-CWYny7Ul.js";import"./PageMain-230YHbXp.js";import"./TruncatedCell-Vu1mJT5A.js";import"./SidePanelFormButtons.module-C5v714vX.js";const L=(e,o,d,u)=>{const r=e.permissions.filter(s=>u.find(({global:f,values:c})=>f&&(c.manage===s||c.view===s))),p=e.permissions.filter(s=>!r.includes(s)),i=p.filter(s=>!o.permissions.includes(s));i.includes("AddComputerToAccessGroup")&&i.push("RemoveComputerFromAccessGroup"),r.length>0&&i.push(...r);const n=o.permissions.filter(s=>!p.includes(s));n.includes("AddComputerToAccessGroup")&&n.push("RemoveComputerFromAccessGroup");const l=w(e.accessGroups,d),a=l.filter(s=>!o.access_groups.includes(s)),g=o.access_groups.filter(s=>!l.includes(s));return{accessGroupsToAdd:a,accessGroupsToRemove:g,permissionsToAdd:i,permissionsToRemove:n}},N=(e,o,d,u,r)=>{const{addAccessGroups:p,addPermissions:i,removeAccessGroups:n,removePermissions:l}=r,a={},{accessGroupsToAdd:g,accessGroupsToRemove:s,permissionsToAdd:f,permissionsToRemove:c}=L(e,o,d,u);return g.length>0&&(a.addAccessGroupsPromise=p({name:o.name,access_groups:g})),s.length>0&&(a.removeAccessGroupsPromise=n({name:o.name,access_groups:s})),c.length>0&&(a.removePermissionsPromise=l({name:o.name,permissions:c})),f.length>0&&(a.addPermissionsPromise=i({name:o.name,permissions:f})),a},M=(e,o,d)=>{const u=[...e.access_groups,...e.access_groups.flatMap(i=>{var n;return((n=o.find(({value:l})=>l===i))==null?void 0:n.children)||[]})],r=e.global_permissions?[...e.permissions,...e.global_permissions]:e.permissions,p=[...new Set([...r,...d.filter(({values:i})=>r.includes(i.manage)).map(({values:i})=>i.view)])];return{accessGroups:u,permissions:p}},q={accessGroups:[],permissions:[]},H=E().shape({accessGroups:h().of(b()),permissions:h().of(b())}),os=({role:e})=>{const o=j(),{notify:d}=x(),{closeSidePanel:u}=O(),{addPermissionsToRoleQuery:r,addAccessGroupsToRoleQuery:p,getAccessGroupQuery:i,getPermissionsQuery:n,removeAccessGroupsFromRoleQuery:l,removePermissionsFromRoleQuery:a}=Q(),{data:g}=n(),s=g?B(g.data):[],{data:f}=i(),c=f?k(I(f.data)):[],{mutateAsync:y}=r,{mutateAsync:T}=p,{mutateAsync:R}=l,{mutateAsync:S}=a,m=_({initialValues:q,validationSchema:H,onSubmit:async t=>{const P=N(t,e,c,s,{addAccessGroups:T,addPermissions:y,removeAccessGroups:R,removePermissions:S});if(!Object.values(P).some(Boolean))return u();try{P.addPermissionsPromise&&P.removePermissionsPromise?(await Promise.all(Object.entries(P).filter(([A,F])=>A!=="addPermissionsPromise"&&F).map(([,A])=>A)),await P.addPermissionsPromise):await Promise.all(Object.values(P).filter(Boolean)),u(),d.success({title:"Role changes have been saved",message:`You modified the role '${e.name}'`})}catch(A){o(A)}}});return V.useEffect(()=>{m.setValues(M(e,c,s))},[e,c.length]),G.jsxs(C.Form,{onSubmit:m.handleSubmit,noValidate:!0,children:[G.jsx(v,{description:"These permissions are for managing the account as a whole. They are not limited to the specified access groups, but instead apply globally.",onPermissionChange:t=>m.setFieldValue("permissions",t),options:s.filter(({global:t})=>t),permissions:m.values.permissions,title:"Global permissions"}),G.jsx(v,{description:"These permissions only apply to selected access groups.",onPermissionChange:t=>m.setFieldValue("permissions",t),options:s.filter(({global:t})=>!t),permissions:m.values.permissions,title:"Permissions"}),G.jsx($,{accessGroupOptions:c,accessGroups:m.values.accessGroups,onAccessGroupChange:t=>{m.setFieldValue("accessGroups",t)}}),G.jsx(D,{submitButtonDisabled:m.isSubmitting,submitButtonText:"Save changes"})]})};export{os as default};
