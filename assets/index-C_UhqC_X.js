const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-BI2h8woW.js","assets/index-Cw5WBMVF.js","assets/index-CZSrOujQ.css","assets/useGPGKeys-DpP7f-iJ.js","assets/tests-DFnZqbNV.js","assets/SidePanelFormButtons-DVp3d0Zl.js","assets/SidePanelFormButtons.module-D2P5PizG.js","assets/SidePanelFormButtons-JM1G8Sq6.css","assets/PageMain-YNWx54qf.js","assets/PageMain--v5xNZ5p.css"])))=>i.map(i=>d[i]);
import{A as P,ai as g,j as e,am as b,n as i,r as c,ae as h,m as f,p as d,E as x,$ as j}from"./index-Cw5WBMVF.js";import{P as _,a as k,b as v}from"./PageMain-YNWx54qf.js";import{u as p}from"./useGPGKeys-DpP7f-iJ.js";const C=({gpgKey:s})=>{const a=P(),{removeGPGKeyQuery:t}=p(),{value:n,setTrue:o,setFalse:r}=g(),{mutateAsync:u,isPending:l}=t,y=async()=>{try{await u({name:s.name})}catch(G){a(G)}finally{r()}};return e.jsxs(e.Fragment,{children:[e.jsx(b,{toggleAriaLabel:`${s.name} GPG key actions`,destructiveActions:[{icon:i.ICONS.delete,label:"Remove","aria-label":`Remove ${s.name} GPG key`,onClick:o}]}),n&&e.jsx(i.ConfirmationModal,{close:r,title:`Deleting ${s.name} GPG key`,confirmButtonLabel:"Delete",confirmButtonAppearance:"negative",confirmButtonLoading:l,confirmButtonDisabled:l,onConfirm:y,children:e.jsx("p",{children:"Are you sure? This action is permanent and cannot be undone."})})]})},A="_fingerprint_wf9ay_1",L="_accessType_wf9ay_10",m={fingerprint:A,accessType:L},w=s=>{const a={};switch(s.column.id){case"name":a.role="rowheader";break;case"has_secret":a["aria-label"]="Access type";break;case"fingerprint":a["aria-label"]="Fingerprint";break;case"actions":a["aria-label"]="Actions";break}return a},M=({items:s})=>{const a=c.useMemo(()=>s,[s.length]),t=c.useMemo(()=>[{accessor:"name",Header:"Name"},{accessor:"has_secret",Header:"Access type",className:m.accessType,Cell:({row:n})=>n.original.has_secret?"Private":"Public"},{accessor:"fingerprint",Header:"Fingerprint",className:m.fingerprint},{...h,Cell:({row:n})=>e.jsx(C,{gpgKey:n.original})}],[a]);return e.jsx(i.ModularTable,{columns:t,data:a,getCellProps:w,emptyMsg:"You have no GPG keys yet."})},S=c.lazy(async()=>j(()=>import("./index-BI2h8woW.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9])).then(s=>({default:s.NewGPGKeyForm}))),T=()=>{const{setSidePanelContent:s}=f(),{getGPGKeysQuery:a}=p(),{data:t,isLoading:n}=a(),o=(t==null?void 0:t.data)??[],r=()=>{s("Import GPG key",e.jsx(c.Suspense,{fallback:e.jsx(d,{}),children:e.jsx(S,{})}))};return e.jsxs(_,{children:[e.jsx(k,{title:"GPG keys",actions:[e.jsx(i.Button,{appearance:"positive",onClick:r,type:"button","aria-label":"Import GPG key",children:"Import key"},"new-key-button")]}),e.jsxs(v,{children:[n&&e.jsx(d,{}),!n&&o.length===0&&e.jsx(x,{title:"No GPG keys found",icon:"connected",body:e.jsxs(e.Fragment,{children:[e.jsx("p",{className:"u-no-margin--bottom",children:"You haven't added any GPG keys yet."}),e.jsx("a",{href:"https://ubuntu.com/landscape/docs/repositories",target:"_blank",rel:"nofollow noopener noreferrer",children:"How to manage GPG keys in Landscape"})]}),cta:[e.jsx(i.Button,{appearance:"positive",onClick:r,type:"button","aria-label":"Import GPG key",children:"Import key"},"table-add-new-mirror")]}),!n&&o.length>0&&e.jsx(M,{items:o})]})]})},B=Object.freeze(Object.defineProperty({__proto__:null,default:T},Symbol.toStringTag,{value:"Module"}));export{M as G,B as i};
