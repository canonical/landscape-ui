import{i as b,h as P,c as z,k as t,l as u}from"./index-P16xpB1n.js";function $(){const n=b(),a=P(),c=z(),i=(e={},s={})=>u({queryKey:["instances",e],queryFn:async()=>c.get("computers",{params:e}),...s}),o=({instanceId:e,...s},R={})=>u({queryKey:["instances",e,s],queryFn:async()=>c.get(`computers/${e}`,{params:s}),...R}),r=t({mutationFn:async({instanceId:e,...s})=>c.put(`computers/${e}`,s),onSuccess:async()=>Promise.all([n.invalidateQueries({queryKey:["instances"]}),n.invalidateQueries({queryKey:["instanceTags"]})])}),y=t({mutationFn:async e=>a.get("AddAnnotationToComputers",{params:e}),onSuccess:async()=>n.invalidateQueries({queryKey:["instances"]})}),m=t({mutationFn:async e=>a.get("RemoveAnnotationFromComputers",{params:e}),onSuccess:async()=>n.invalidateQueries({queryKey:["instances"]})}),g=t({mutationFn:async e=>a.get("AddTagsToComputers",{params:e}),onSuccess:async()=>n.invalidateQueries({queryKey:["instances"]})}),d=t({mutationFn:async e=>a.get("RemoveTagsFromComputers",{params:e}),onSuccess:async()=>n.invalidateQueries({queryKey:["instances"]})}),Q=t({mutationFn:async e=>a.get("ChangeComputersAccessGroup",{params:e}),onSuccess:async()=>n.invalidateQueries({queryKey:["instances"]})}),p=t({mutationFn:async e=>a.get("RemoveComputers",{params:e}),onSuccess:async()=>n.invalidateQueries({queryKey:["instances"]})}),l=(e={},s={})=>u({queryKey:["pendingInstances"],queryFn:async()=>a.get("GetPendingComputers",{params:e}),...s}),F=t({mutationFn:async e=>a.get("AcceptPendingComputers",{params:e}),onSuccess:async()=>n.invalidateQueries({queryKey:["pendingInstances"]})}),q=t({mutationFn:async e=>a.get("RejectPendingComputers",{params:e}),onSuccess:async()=>n.invalidateQueries({queryKey:["pendingInstances"]})}),v=t({mutationFn:async e=>a.get("CreateCloudOtps",{params:e}),onSuccess:async()=>n.invalidateQueries({queryKey:["instances"]})}),K=t({mutationFn:async e=>a.get("RebootComputers",{params:e}),onSuccess:async()=>n.invalidateQueries({queryKey:["instances"]})}),I=t({mutationFn:async({id:e,...s})=>c.post(`computers/${e}/restart`,s),onSuccess:async()=>n.invalidateQueries({queryKey:["instances"]})}),C=t({mutationFn:async e=>a.get("ShutdownComputers",{params:e}),onSuccess:async()=>n.invalidateQueries({queryKey:["instances"]})}),S=t({mutationFn:async e=>a.get("RenameComputers",{params:e}),onSuccess:async()=>n.invalidateQueries({queryKey:["instances"]})}),h=(e={},s={})=>u({queryKey:["instanceTags"],queryFn:async()=>c.get("tags",{params:e}),...s}),A=(e={},s={})=>u({queryKey:["availabilityZones"],queryFn:async()=>c.get("computers/availability-zones",{params:e}),...s}),T=t({mutationKey:["instance","sanitize"],mutationFn:async({computer_id:e,...s})=>c.post(`computers/${e}/sanitize`,s),onSuccess:async()=>n.invalidateQueries({queryKey:["instances"]})});return{getInstancesQuery:i,getSingleInstanceQuery:o,editInstanceQuery:r,addAnnotationToInstancesQuery:y,removeAnnotationFromInstancesQuery:m,addTagsToInstancesQuery:g,removeTagsFromInstancesQuery:d,changeInstancesAccessGroupQuery:Q,removeInstancesQuery:p,getPendingInstancesQuery:l,acceptPendingInstancesQuery:F,rejectPendingInstancesQuery:q,createCloudOtpsQuery:v,rebootInstancesQuery:K,restartInstanceQuery:I,shutdownInstancesQuery:C,renameInstancesQuery:S,getAllInstanceTagsQuery:h,getAvailabilityZonesQuery:A,sanitizeInstanceQuery:T}}export{$ as u};
