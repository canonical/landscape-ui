import{h as K,i as V,t as P,k as n,V as O,r as F,p as Q,f as W,s as Y,j as r,g as i,a0 as k}from"./index-CYp7KpWP.js";import{C as S,U as J}from"./UdebCheckboxInput-BHC1ZEKv.js";import{S as X}from"./SidePanelFormButtons-CWjtOatT.js";import{u as Z}from"./useGPGKeys-C4qpGZHL.js";import{g as l}from"./formikErrors-DjhZJkz-.js";import{h as p}from"./usePageParams-Cdul7EKX.js";import{M as C,S as y,I,e as h,a as ee,u as te,h as re,C as se,A as ae,i as T,P as w,g as j,D as A,j as q}from"./constants-B7YOQwvd.js";import{t as D}from"./tests-CN4uziPR.js";import"./SidePanelFormButtons.module-tJTvEwdD.js";import"./useFetchOld-BtMSdrpk.js";import"./NoData-B_JqPCKo.js";import"./index-Dd43U3H8.js";import"./TablePagination-DfImDJ_0.js";import"./TablePaginationBase-B5KNErBF.js";import"./StatusFilter-CG4Htv6n.js";import"./TableFilter-C9-C7sax.js";import"./TableFilterChips-BmEe_iGb.js";try{let a=typeof window<"u"?window:typeof global<"u"?global:typeof globalThis<"u"?globalThis:typeof self<"u"?self:{},d=new a.Error().stack;d&&(a._sentryDebugIds=a._sentryDebugIds||{},a._sentryDebugIds[d]="659bddae-3c92-45a9-9e82-f59fff5d6b98",a._sentryDebugIdIdentifier="sentry-dbid-659bddae-3c92-45a9-9e82-f59fff5d6b98")}catch{}const ie=a=>a.replace(/\/[^\\/@]*@/,"/"),oe=a=>a?{...I,distribution:a.name}:I,le=(a,d)=>K().shape({distribution:n().required("This field is required."),type:n().required("This field is required."),name:n().required("This field is required.").test({test:D.test,message:D.message}).test({test:(o,s)=>!!s.parent.distribution,message:"First select the distribution."}).test({params:{distribution:d,distributions:a},test:(o,s)=>{var g;if(!s.parent.distribution)return!0;const c=d?d.series.map(({name:m})=>m):(g=a.find(({name:m})=>m===s.parent.distribution))==null?void 0:g.series.map(({name:m})=>m);return!(c!=null&&c.includes(o))},message:"It must be unique within series within the distribution."}),hasPockets:V(),mirror_series:n(),mirror_gpg_key:n(),mirror_uri:n().when("hasPockets",([o],s)=>o?s.nonNullable().required("This field is required."):s),snapshotDate:n().when("type",([o],s)=>o==="ubuntu-snapshot"?s.required("This field is required.").test({test:c=>p(c).isBetween(p(y),p()),message:`The date must be after ${p(y).format(O)} and not in the future.`}):s),gpg_key:n().when("hasPockets",([o],s)=>o?s.required("This field is required."):s),pockets:P().of(n()),components:P().of(n()).when("hasPockets",([o],s)=>o?s.min(C,"Please choose at least one component."):s),architectures:P().of(n()).when("hasPockets",([o],s)=>o?s.min(C,"Please choose at least one architecture."):s),include_udeb:V().required()}),we=({distribution:a,ctaText:d="Add mirror"})=>{const[o,s]=F.useState(h),[c,g]=F.useState([]),m=Q(),{closeSidePanel:R}=W(),{getGPGKeysQuery:N}=Z(),{createSeriesQuery:U,getRepoInfo:M}=ee(),{getDistributionsQuery:L}=te(),{data:f}=L({include_latest_sync:!0},{enabled:!a}),x=(f==null?void 0:f.data)??[],{data:_}=N(),{mutateAsync:G}=U,E=(_==null?void 0:_.data)??[],$=x.map(({name:t})=>({label:t,value:t})),e=Y({initialValues:oe(a),validationSchema:le(x,a),onSubmit:async t=>{try{await G({name:t.name,distribution:t.distribution,mirror_series:t.mirror_series,gpg_key:t.gpg_key,include_udeb:t.include_udeb,mirror_uri:t.mirror_uri,components:t.components,pockets:t.pockets,architectures:t.architectures,mirror_gpg_key:t.mirror_gpg_key}),R()}catch(u){m(u)}}}),B=async t=>{await e.setFieldValue("snapshotDate",t.target.value),await e.setFieldValue("mirror_uri",`${A}/${p(t.target.value).format(q)}`)},H=async t=>{var u;await e.setFieldValue("type",t.target.value),t.target.value==="ubuntu"?(await e.setFieldValue("mirror_uri",h),await e.setFieldValue("pockets",T.ubuntu),await e.setFieldValue("hasPockets",!0),await e.setFieldValue("components",w.ubuntu),await e.setFieldValue("architectures",j.ubuntu),(u=e.values.mirror_uri)!=null&&u.startsWith(h)||await e.setFieldValue("mirror_uri",h),s(h)):t.target.value==="third-party"?(await e.setFieldValue("mirror_uri",""),await e.setFieldValue("pockets",T.thirdParty),await e.setFieldValue("hasPockets",!0),await e.setFieldValue("components",w.thirdParty),await e.setFieldValue("architectures",j.thirdParty),s("")):t.target.value==="ubuntu-snapshot"&&(await e.setFieldValue("mirror_uri",`${A}/${p(e.values.snapshotDate).format(q)}`),await e.setFieldValue("pockets",T.ubuntu),await e.setFieldValue("hasPockets",!0),await e.setFieldValue("components",w.ubuntu),s(h))},z=async t=>{const{value:u}=t.target;await e.setFieldValue("mirror_series",u),!(!u||e.values.name)&&await e.setFieldValue("name",e.values.type==="ubuntu-snapshot"?`${u}-snapshot-${p(e.values.snapshotDate).format(k)}`:u)},{data:{data:b}={data:void 0}}=M({mirror_uri:ie(o)},{enabled:!!o});return F.useEffect(()=>{var t;if(!b){g([]);return}b.ubuntu?(t=e.values.mirror_uri)!=null&&t.startsWith(h)&&e.setFieldValue("type","ubuntu"):e.setFieldValue("type","third-party"),g(b.repos.map(({description:u,repo:v})=>({label:b.ubuntu?u:v,value:v})))},[b]),r.jsxs(i.Form,{onSubmit:e.handleSubmit,noValidate:!0,children:[r.jsx(i.Select,{label:"Type",required:!0,options:[{label:"Ubuntu Archive",value:"ubuntu"},{label:"Ubuntu Snapshot",value:"ubuntu-snapshot"},{label:"Third party",value:"third-party"}],...e.getFieldProps("type"),onChange:H,error:l(e,"type")}),e.values.type!=="ubuntu-snapshot"?r.jsx(i.Input,{type:"text",label:"Mirror URI",required:e.values.hasPockets,help:"Absolute URL or file path",...e.getFieldProps("mirror_uri"),onBlur:t=>{s(t.target.value)},error:l(e,"mirror_uri")}):r.jsx(i.Input,{type:"date",min:p(y).format(k),max:p().format(k),label:"Snapshot date",required:!0,...e.getFieldProps("snapshotDate"),onChange:B,error:l(e,"snapshotDate"),help:`Starting from approximately ${p(y).format(O)} in dd.mm.yyyy format`}),!a&&r.jsx(i.Select,{label:"Distribution",required:!0,options:[{label:"Select distribution",value:""},...$],...e.getFieldProps("distribution"),error:l(e,"distribution")}),r.jsxs(i.Row,{className:"u-no-padding",children:[r.jsx(i.Col,{size:6,medium:3,small:2,children:r.jsx(i.Select,{label:"Mirror series",options:[{label:"Select series",value:""},...c],...e.getFieldProps("mirror_series"),onChange:z,error:l(e,"mirror_series")})}),r.jsx(i.Col,{size:6,medium:3,small:2,children:r.jsx(i.Input,{type:"text",label:"Series name",required:!0,...e.getFieldProps("name"),error:l(e,"name")})})]}),r.jsxs(i.Row,{className:"u-no-padding",children:[e.values.type!=="ubuntu-snapshot"&&r.jsx(i.Col,{size:6,medium:3,small:2,children:r.jsx(i.Select,{label:"Mirror GPG key",options:[{label:"Select mirror GPG key",value:""},...E.filter(({has_secret:t})=>!t).map(({name:t})=>({label:t,value:t}))],...e.getFieldProps("mirror_gpg_key"),error:l(e,"mirror_gpg_key"),help:"If none is given, the stock Ubuntu archive one will be used."})}),r.jsx(i.Col,{size:6,medium:3,small:2,children:r.jsx(i.Select,{label:"GPG key",required:e.values.hasPockets,options:[{label:"Select GPG key",value:""},...E.filter(({has_secret:t})=>t).map(({name:t})=>({label:t,value:t}))],...e.getFieldProps("gpg_key"),error:l(e,"gpg_key")})})]}),e.values.type!=="third-party"?r.jsxs(r.Fragment,{children:[r.jsx(S,{label:"Pockets",style:{marginTop:"1.5rem"},options:re,...e.getFieldProps("pockets"),onChange:async t=>{await e.setFieldValue("pockets",t),await e.setFieldValue("hasPockets",!!t.length)},error:l(e,"pockets")}),r.jsx(S,{label:"Components",required:e.values.hasPockets,options:se,...e.getFieldProps("components"),onChange:async t=>{await e.setFieldValue("components",t)},error:l(e,"components")}),r.jsx(S,{label:"Architectures",required:e.values.hasPockets,options:ae,...e.getFieldProps("architectures"),onChange:async t=>{await e.setFieldValue("architectures",t)},error:l(e,"architectures")})]}):r.jsxs(r.Fragment,{children:[r.jsx(i.Input,{type:"text",label:"Pockets",placeholder:"E.g. releases, security, etc.",...e.getFieldProps("pockets"),value:e.values.pockets.join(","),onChange:async t=>{await e.setFieldValue("pockets",t.target.value.replace(/\s/g,"").split(",")),await e.setFieldValue("hasPockets",!!t.target.value)},error:l(e,"pockets"),help:"List the pocket names separated by commas"}),r.jsx(i.Input,{type:"text",label:"Components",required:e.values.hasPockets,placeholder:"E.g. main, universe, etc.",...e.getFieldProps("components"),value:e.values.components.join(","),onChange:async t=>{await e.setFieldValue("components",t.target.value.replace(/\s/g,"").split(","))},error:l(e,"components"),help:"List the component names separated by commas"}),r.jsx(i.Input,{type:"text",label:"Architectures",required:e.values.hasPockets,placeholder:"E.g. amd64, riscv, etc.",...e.getFieldProps("architectures"),value:e.values.architectures.join(","),onChange:async t=>{await e.setFieldValue("architectures",t.target.value.replace(/\s/g,"").split(","))},error:l(e,"architectures"),help:"List the architectures separated by commas"})]}),r.jsx(J,{formik:e}),r.jsx(X,{submitButtonDisabled:e.isSubmitting,submitButtonText:d})]})};export{we as default};
