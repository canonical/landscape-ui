import{p as w,q as F,f as j,s as x,h as E,r as I,j as h,g as O,t as A,k as G}from"./index-czR6w9lm.js";import{u as V}from"./useRoles-DBOAY-4X.js";import{g as C,a as Q,b as B,c as D}from"./index-DPsxvcx1.js";import{P as y,A as k}from"./AccessGroupBlock-fjIt4oUB.js";import{S as $}from"./SidePanelFormButtons-CfWEYvbx.js";import"./useFetchOld-CEj2k1CT.js";import"./PageMain-0gnhxHMf.js";import"./TruncatedCell-CmSN9Dd8.js";import"./SidePanelFormButtons.module-tJTvEwdD.js";try{let s=typeof window<"u"?window:typeof global<"u"?global:typeof globalThis<"u"?globalThis:typeof self<"u"?self:{},o=new s.Error().stack;o&&(s._sentryDebugIds=s._sentryDebugIds||{},s._sentryDebugIds[o]="a0f3ef6c-62eb-438b-9458-89b6b6e09f6b",s._sentryDebugIdIdentifier="sentry-dbid-a0f3ef6c-62eb-438b-9458-89b6b6e09f6b")}catch{}const L=(s,o,l,u)=>{const n=s.permissions.filter(e=>u.find(({global:g,values:c})=>g&&(c.manage===e||c.view===e))),p=s.permissions.filter(e=>!n.includes(e)),i=p.filter(e=>!o.permissions.includes(e));i.includes("AddComputerToAccessGroup")&&i.push("RemoveComputerFromAccessGroup"),n.length>0&&i.push(...n);const r=o.permissions.filter(e=>!p.includes(e));r.includes("AddComputerToAccessGroup")&&r.push("RemoveComputerFromAccessGroup");const d=C(s.accessGroups,l),a=d.filter(e=>!o.access_groups.includes(e)),f=o.access_groups.filter(e=>!d.includes(e));return{accessGroupsToAdd:a,accessGroupsToRemove:f,permissionsToAdd:i,permissionsToRemove:r}},N=(s,o,l,u,n)=>{const{addAccessGroups:p,addPermissions:i,removeAccessGroups:r,removePermissions:d}=n,a={},{accessGroupsToAdd:f,accessGroupsToRemove:e,permissionsToAdd:g,permissionsToRemove:c}=L(s,o,l,u);return f.length>0&&(a.addAccessGroupsPromise=p({name:o.name,access_groups:f})),e.length>0&&(a.removeAccessGroupsPromise=r({name:o.name,access_groups:e})),c.length>0&&(a.removePermissionsPromise=d({name:o.name,permissions:c})),g.length>0&&(a.addPermissionsPromise=i({name:o.name,permissions:g})),a},M=(s,o,l)=>{const u=[...s.access_groups,...s.access_groups.flatMap(i=>{var r;return((r=o.find(({value:d})=>d===i))==null?void 0:r.children)||[]})],n=s.global_permissions?[...s.permissions,...s.global_permissions]:s.permissions,p=[...new Set([...n,...l.filter(({values:i})=>n.includes(i.manage)).map(({values:i})=>i.view)])];return{accessGroups:u,permissions:p}},q={accessGroups:[],permissions:[]},H=E().shape({accessGroups:A().of(G()),permissions:A().of(G())}),os=({role:s})=>{const o=w(),{notify:l}=F(),{closeSidePanel:u}=j(),{addPermissionsToRoleQuery:n,addAccessGroupsToRoleQuery:p,getAccessGroupQuery:i,getPermissionsQuery:r,removeAccessGroupsFromRoleQuery:d,removePermissionsFromRoleQuery:a}=V(),{data:f}=r(),e=f?Q(f.data):[],{data:g}=i(),c=g?B(D(g.data)):[],{mutateAsync:v}=n,{mutateAsync:T}=p,{mutateAsync:R}=d,{mutateAsync:S}=a,m=x({initialValues:q,validationSchema:H,onSubmit:async t=>{const b=N(t,s,c,e,{addAccessGroups:T,addPermissions:v,removeAccessGroups:R,removePermissions:S});if(!Object.values(b).some(Boolean))return u();try{b.addPermissionsPromise&&b.removePermissionsPromise?(await Promise.all(Object.entries(b).filter(([P,_])=>P!=="addPermissionsPromise"&&_).map(([,P])=>P)),await b.addPermissionsPromise):await Promise.all(Object.values(b).filter(Boolean)),u(),l.success({title:"Role changes have been saved",message:`You modified the role '${s.name}'`})}catch(P){o(P)}}});return I.useEffect(()=>{m.setValues(M(s,c,e))},[s,c.length]),h.jsxs(O.Form,{onSubmit:m.handleSubmit,noValidate:!0,children:[h.jsx(y,{description:"These permissions are for managing the account as a whole. They are not limited to the specified access groups, but instead apply globally.",onPermissionChange:t=>m.setFieldValue("permissions",t),options:e.filter(({global:t})=>t),permissions:m.values.permissions,title:"Global permissions"}),h.jsx(y,{description:"These permissions only apply to selected access groups.",onPermissionChange:t=>m.setFieldValue("permissions",t),options:e.filter(({global:t})=>!t),permissions:m.values.permissions,title:"Permissions"}),h.jsx(k,{accessGroupOptions:c,accessGroups:m.values.accessGroups,onAccessGroupChange:t=>{m.setFieldValue("accessGroups",t)}}),h.jsx($,{submitButtonDisabled:m.isSubmitting,submitButtonText:"Save changes"})]})};export{os as default};
