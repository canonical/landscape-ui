import{j as a,d as i,B as y,C as S,o as h,F as x}from"./index-C_GVlKfy.js";import{A as T}from"./AssociationBlock-CNkwPUSp.js";import{S as v}from"./SidePanelFormButtons-CjYu2zbA.js";import{u as f}from"./useRoles-Bz2YBO51.js";import{u as g,V as j,I,P as V,b as A,c as C}from"./index-Dg0Nv4Ue.js";import{F as O}from"./FileInput-CHM2cmIW.js";import{P as w}from"./PackageProfileConstraintsBlock-Bw7t0UF7.js";import{u as B}from"./useInstances-BXftMtlp.js";const E=[{label:"Select constraints type",value:""},{label:"From an instance's packages",value:"instance"},{label:"From a CSV file",value:"material"},{label:"Enter manually",value:"manual"}],N="_container_vi1gw_1",q={container:N},D=({formik:e})=>{const{getInstancesQuery:d}=B(),{data:c}=d(),u=(c==null?void 0:c.data.results.map(({id:r,title:n})=>({label:n,value:`${r}`})))??[];u.unshift({label:"Select instance",value:""});const p=async r=>{await e.setFieldValue("csvFile",r[0]);const n=await r[0].text();await e.setFieldValue("material",n)},l=async()=>{await e.setFieldValue("csvFile",null),await e.setFieldValue("material",""),await e.setFieldValue("isCsvFileParsed",!1)};return a.jsxs("div",{className:q.container,children:[a.jsx(i.Select,{label:"Package constraints",required:!0,options:E,...e.getFieldProps("constraintsType"),error:e.touched.constraintsType&&e.errors.constraintsType?e.errors.constraintsType:void 0}),e.values.constraintsType==="instance"&&a.jsx(i.Select,{label:"Instance",required:e.values.constraintsType==="instance",options:u,...e.getFieldProps("source_computer_id"),error:e.touched.source_computer_id&&e.errors.source_computer_id?e.errors.source_computer_id:void 0}),e.values.constraintsType==="material"&&a.jsx(O,{label:"Upload constraints",accept:".csv",...e.getFieldProps("csvFile"),onFileRemove:l,onFileUpload:p,help:'File should be formatted as either a package profile CSV file or the output of running "dpkg --get-selections" on a computer with desired packages installed.',error:e.touched.csvFile&&e.errors.csvFile||e.touched.material&&e.errors.material||void 0}),e.values.constraintsType==="manual"&&a.jsx(w,{formik:e})]})},P=()=>{const e=y(),{notify:d}=S(),{closeSidePanel:c}=h(),{getAccessGroupQuery:u}=f(),{createPackageProfileQuery:p}=g(),{data:l}=u(),r=(l==null?void 0:l.data.map(({name:s,title:o})=>({label:o,value:s})))??[],{mutateAsync:n}=p,t=x({initialValues:I,onSubmit:async s=>{const o={access_group:s.access_group,description:s.description,title:s.title};s.all_computers?o.all_computers=!0:s.tags.length>0&&(o.tags=s.tags),s.constraintsType==="material"?o.material=s.material:s.constraintsType==="instance"?o.source_computer_id=s.source_computer_id:o.constraints=s.constraints.map(({constraint:m,package:_,rule:b,version:F})=>({constraint:m,package:_,rule:b,version:F}));try{await n(o),c(),d.success({message:`Profile "${s.title}" added successfully`,title:"Profile added"})}catch(m){e(m)}},validationSchema:j});return a.jsxs(i.Form,{onSubmit:t.handleSubmit,noValidate:!0,children:[a.jsx(i.Input,{type:"text",label:"Title",required:!0,...t.getFieldProps("title"),error:t.touched.title&&t.errors.title?t.errors.title:void 0}),a.jsx(i.Input,{type:"text",label:"Description",required:!0,autoComplete:"off",...t.getFieldProps("description"),error:t.touched.description&&t.errors.description?t.errors.description:void 0}),a.jsx(i.Select,{label:"Access group",...t.getFieldProps("access_group"),options:r,error:t.touched.access_group&&t.errors.access_group?t.errors.access_group:void 0}),a.jsx(T,{formik:t}),a.jsx(D,{formik:t}),a.jsx(v,{submitButtonDisabled:t.isSubmitting,submitButtonText:"Add package profile"})]})},Y=Object.freeze(Object.defineProperty({__proto__:null,default:P},Symbol.toStringTag,{value:"Module"})),k=Object.freeze(Object.defineProperty({__proto__:null,PackageProfileCreateForm:P,PackageProfileHeader:A,PackageProfileList:V,PackageProfilesEmptyState:C,usePackageProfiles:g},Symbol.toStringTag,{value:"Module"}));export{k as a,Y as i};
