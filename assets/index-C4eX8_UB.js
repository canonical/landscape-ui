import{k as S,e as w,f as x,l as N,j as s,g as r}from"./index-Ck927htQ.js";import{u as v}from"./formik.esm-BeHAEGbw.js";import{c as L,a as p,g as q}from"./index.esm-DVEO1SHz.js";import{F as P}from"./FileInput-Bof6ilgB.js";import{S as R}from"./SidePanelFormButtons-Bz2-NFyW.js";import"./moment-Cl4UOzQZ.js";import"./InfoItem.module-BZ3tYMsb.js";import{useActivities as j}from"./index-B8LwkN-N.js";import{u as B}from"./WslInstanceList.module-Bv-6V4m_.js";import"./SidePanelFormButtons.module-DyBJG5lm.js";import"./InfoItem-CG9Eh7-D.js";import"./useFetchOld-Bw_PvLnb.js";import"./useMutation-qHwpl5BJ.js";import"./useQuery-CVfp-Q20.js";import"./useConfirm-BNcLyHnT.js";import"./useInstances-DzQUvDTS.js";import"./moment-IrVVnzQI.js";import"./TablePagination.module-DLVph1Z1.js";import"./TablePagination-D0UxaJGH.js";import"./usePageParams-Cezobf9b.js";import"./EmptyState-BoClkKZD.js";import"./SearchHelpPopup-C_Px2zYH.js";const i={instanceType:{slug:"instanceType",label:"Instance type",type:"select",options:[{label:"Custom",value:"custom"}]},cloudInit:{slug:"cloudInit",label:"Cloud-init",type:"file"},instanceName:{slug:"instanceName",label:"Instance name",type:"text"},rootfs:{slug:"rootfs",label:"Rootfs URL",type:"text"}},E=[/^ubuntu$/,/^ubuntu-preview$/,/^ubuntu-[0-9]{2}\.[0-9]{2}$/],_=1,A=a=>{if(a)return new Promise((l,c)=>{const o=new FileReader;o.readAsDataURL(a),o.onload=()=>l(o.result),o.onerror=u=>c(u)})},C=()=>{const{instanceId:a}=S(),l=w(),{closeSidePanel:c}=x(),{notify:o}=N(),{createChildInstanceQuery:u,getWslInstanceNamesQuery:b}=B(),{openActivityDetails:f}=j(),{data:d,isLoading:y}=b(),{mutateAsync:I}=u,e=v({initialValues:{instanceType:"Ubuntu",cloudInit:null,instanceName:"",rootfs:""},validationSchema:L({instanceType:p().required("This field is required"),cloudInit:q().nullable().test("file-size","File size must be less than 1MB",t=>t?t.size===void 0?!1:t.size<=_*1024*1024:!0),instanceName:p().when("instanceType",{is:"custom",then:t=>t.required("This field is required").test("not-match-reserved-patterns","Instance name cannot match 'ubuntu', 'ubuntu-preview', or 'ubuntu-<dd>.<dd>'",n=>!E.some(m=>m.test(n.toLowerCase())))}),rootfs:p().url().when("instanceType",{is:"custom",then:t=>t.required("This field is required")})}),onSubmit:async t=>{try{const n=await A(t.cloudInit),m=n?n.split(",")[1]:void 0,{data:g}=await I({parent_id:parseInt(a??""),computer_name:t.instanceType==="custom"?t.instanceName:t.instanceType,rootfs_url:t.instanceType==="custom"?t.rootfs:void 0,cloud_init:m});c(),o.success({message:"You queued a new WSL instance to be installed",actions:[{label:"View details",onClick:()=>f(g)}]})}catch(n){l(n)}}}),h=((d==null?void 0:d.data)??[]).map(({label:t,name:n})=>({label:t,value:n}))||[],F=async t=>{await e.setFieldValue("cloudInit",t[0])},T=async()=>{await e.setFieldValue("cloudInit",null)};return s.jsxs(r.Form,{onSubmit:e.handleSubmit,noValidate:!0,children:[s.jsx(r.Select,{label:i.instanceType.label,required:!0,disabled:y,options:[...h,...i.instanceType.options],...e.getFieldProps("instanceType"),error:e.touched.instanceType&&e.errors.instanceType?e.errors.instanceType:void 0}),e.values.instanceType==="custom"&&s.jsxs(s.Fragment,{children:[s.jsx(r.Input,{label:i.instanceName.label,type:i.instanceName.type,required:!0,...e.getFieldProps("instanceName"),error:e.touched.instanceName&&e.errors.instanceName?e.errors.instanceName:void 0}),s.jsx(r.Input,{label:i.rootfs.label,type:i.rootfs.type,required:!0,...e.getFieldProps("rootfs"),error:e.touched.rootfs&&e.errors.rootfs?e.errors.rootfs:void 0})]}),s.jsx(P,{label:i.cloudInit.label,accept:".yaml",...e.getFieldProps("cloudInit"),onFileRemove:T,onFileUpload:F,help:"You can use a cloud-init configuration YAML file under 1MB to register new WSL instances. Cloud-init streamlines the setup by automating installation and configuration tasks.",error:e.touched.cloudInit&&e.errors.cloudInit?e.errors.cloudInit:void 0}),s.jsx(R,{submitButtonDisabled:e.isSubmitting,submitButtonText:"Install",submitButtonAriaLabel:"Install new WSL instance"})]})},oe=C;export{oe as default};
