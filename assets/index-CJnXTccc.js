import{J as z,K as C,Q as F,M as n,w as c,a8 as R,r as k,A as Q,k as W,C as J,j as r,n as a,F as o,ab as S}from"./index-DKN0tqRa.js";import{C as f,U as Y}from"./UdebCheckboxInput-LSt7kgT0.js";import{S as X}from"./SidePanelFormButtons-CzpJzypN.js";import{u as Z}from"./useGPGKeys-C7lCM_up.js";import{M as V,S as y,I as j,e as m,a as ee,u as te,h as re,C as se,A as ae,i as T,P as w,g as I,D as A,j as q}from"./constants-lqavuBH6.js";import{t as O}from"./tests-DFnZqbNV.js";import"./SidePanelFormButtons.module-D2P5PizG.js";const ie=l=>l.replace(/\/[^\\/@]*@/,"/"),oe=l=>l?{...j,distribution:l.name}:j,le=(l,h)=>z().shape({distribution:n().required("This field is required."),type:n().required("This field is required."),name:n().required("This field is required.").test({test:O.test,message:O.message}).test({test:(i,s)=>!!s.parent.distribution,message:"First select the distribution."}).test({params:{distribution:h,distributions:l},test:(i,s)=>{var g;if(!s.parent.distribution)return!0;const p=h?h.series.map(({name:d})=>d):(g=l.find(({name:d})=>d===s.parent.distribution))==null?void 0:g.series.map(({name:d})=>d);return!(p!=null&&p.includes(i))},message:"It must be unique within series within the distribution."}),hasPockets:C(),mirror_series:n(),mirror_gpg_key:n(),mirror_uri:n().when("hasPockets",([i],s)=>i?s.nonNullable().required("This field is required."):s),snapshotDate:n().when("type",([i],s)=>i==="ubuntu-snapshot"?s.required("This field is required.").test({test:p=>c(p).isBetween(c(y),c()),message:`The date must be after ${c(y).format(R)} and not in the future.`}):s),gpg_key:n().when("hasPockets",([i],s)=>i?s.required("This field is required."):s),pockets:F().of(n()),components:F().of(n()).when("hasPockets",([i],s)=>i?s.min(V,"Please choose at least one component."):s),architectures:F().of(n()).when("hasPockets",([i],s)=>i?s.min(V,"Please choose at least one architecture."):s),include_udeb:C().required()}),ge=({distribution:l,ctaText:h="Add mirror"})=>{const[i,s]=k.useState(m),[p,g]=k.useState([]),d=Q(),{closeSidePanel:D}=W(),{getGPGKeysQuery:N}=Z(),{createSeriesQuery:U,getRepoInfo:M}=ee(),{getDistributionsQuery:L}=te(),{data:_}=L({include_latest_sync:!0},{enabled:!l}),x=(_==null?void 0:_.data)??[],{data:P}=N(),{mutateAsync:G}=U,v=(P==null?void 0:P.data)??[],$=x.map(({name:t})=>({label:t,value:t})),e=J({initialValues:oe(l),validationSchema:le(x,l),onSubmit:async t=>{try{await G({name:t.name,distribution:t.distribution,mirror_series:t.mirror_series,gpg_key:t.gpg_key,include_udeb:t.include_udeb,mirror_uri:t.mirror_uri,components:t.components,pockets:t.pockets,architectures:t.architectures,mirror_gpg_key:t.mirror_gpg_key}),D()}catch(u){d(u)}}}),B=async t=>{await e.setFieldValue("snapshotDate",t.target.value),await e.setFieldValue("mirror_uri",`${A}/${c(t.target.value).format(q)}`)},H=async t=>{var u;await e.setFieldValue("type",t.target.value),t.target.value==="ubuntu"?(await e.setFieldValue("mirror_uri",m),await e.setFieldValue("pockets",T.ubuntu),await e.setFieldValue("hasPockets",!0),await e.setFieldValue("components",w.ubuntu),await e.setFieldValue("architectures",I.ubuntu),(u=e.values.mirror_uri)!=null&&u.startsWith(m)||await e.setFieldValue("mirror_uri",m),s(m)):t.target.value==="third-party"?(await e.setFieldValue("mirror_uri",""),await e.setFieldValue("pockets",T.thirdParty),await e.setFieldValue("hasPockets",!0),await e.setFieldValue("components",w.thirdParty),await e.setFieldValue("architectures",I.thirdParty),s("")):t.target.value==="ubuntu-snapshot"&&(await e.setFieldValue("mirror_uri",`${A}/${c(e.values.snapshotDate).format(q)}`),await e.setFieldValue("pockets",T.ubuntu),await e.setFieldValue("hasPockets",!0),await e.setFieldValue("components",w.ubuntu),s(m))},K=async t=>{const{value:u}=t.target;await e.setFieldValue("mirror_series",u),!(!u||e.values.name)&&await e.setFieldValue("name",e.values.type==="ubuntu-snapshot"?`${u}-snapshot-${c(e.values.snapshotDate).format(S)}`:u)},{data:{data:b}={data:void 0}}=M({mirror_uri:ie(i)},{enabled:!!i});return k.useEffect(()=>{var t;if(!b){g([]);return}b.ubuntu?(t=e.values.mirror_uri)!=null&&t.startsWith(m)&&e.setFieldValue("type","ubuntu"):e.setFieldValue("type","third-party"),g(b.repos.map(({description:u,repo:E})=>({label:b.ubuntu?u:E,value:E})))},[b]),r.jsxs(a.Form,{onSubmit:e.handleSubmit,noValidate:!0,children:[r.jsx(a.Select,{label:"Type",required:!0,options:[{label:"Ubuntu Archive",value:"ubuntu"},{label:"Ubuntu Snapshot",value:"ubuntu-snapshot"},{label:"Third party",value:"third-party"}],...e.getFieldProps("type"),onChange:H,error:o(e,"type")}),e.values.type!=="ubuntu-snapshot"?r.jsx(a.Input,{type:"text",label:"Mirror URI",required:e.values.hasPockets,help:"Absolute URL or file path",...e.getFieldProps("mirror_uri"),onBlur:t=>{s(t.target.value)},error:o(e,"mirror_uri")}):r.jsx(a.Input,{type:"date",min:c(y).format(S),max:c().format(S),label:"Snapshot date",required:!0,...e.getFieldProps("snapshotDate"),onChange:B,error:o(e,"snapshotDate"),help:`Starting from approximately ${c(y).format(R)} in dd.mm.yyyy format`}),!l&&r.jsx(a.Select,{label:"Distribution",required:!0,options:[{label:"Select distribution",value:""},...$],...e.getFieldProps("distribution"),error:o(e,"distribution")}),r.jsxs(a.Row,{className:"u-no-padding",children:[r.jsx(a.Col,{size:6,medium:3,small:2,children:r.jsx(a.Select,{label:"Mirror series",options:[{label:"Select series",value:""},...p],...e.getFieldProps("mirror_series"),onChange:K,error:o(e,"mirror_series")})}),r.jsx(a.Col,{size:6,medium:3,small:2,children:r.jsx(a.Input,{type:"text",label:"Series name",required:!0,...e.getFieldProps("name"),error:o(e,"name")})})]}),r.jsxs(a.Row,{className:"u-no-padding",children:[e.values.type!=="ubuntu-snapshot"&&r.jsx(a.Col,{size:6,medium:3,small:2,children:r.jsx(a.Select,{label:"Mirror GPG key",options:[{label:"Select mirror GPG key",value:""},...v.filter(({has_secret:t})=>!t).map(({name:t})=>({label:t,value:t}))],...e.getFieldProps("mirror_gpg_key"),error:o(e,"mirror_gpg_key"),help:"If none is given, the stock Ubuntu archive one will be used."})}),r.jsx(a.Col,{size:6,medium:3,small:2,children:r.jsx(a.Select,{label:"GPG key",required:e.values.hasPockets,options:[{label:"Select GPG key",value:""},...v.filter(({has_secret:t})=>t).map(({name:t})=>({label:t,value:t}))],...e.getFieldProps("gpg_key"),error:o(e,"gpg_key")})})]}),e.values.type!=="third-party"?r.jsxs(r.Fragment,{children:[r.jsx(f,{label:"Pockets",style:{marginTop:"1.5rem"},options:re,...e.getFieldProps("pockets"),onChange:async t=>{await e.setFieldValue("pockets",t),await e.setFieldValue("hasPockets",!!t.length)},error:o(e,"pockets")}),r.jsx(f,{label:"Components",required:e.values.hasPockets,options:se,...e.getFieldProps("components"),onChange:async t=>{await e.setFieldValue("components",t)},error:o(e,"components")}),r.jsx(f,{label:"Architectures",required:e.values.hasPockets,options:ae,...e.getFieldProps("architectures"),onChange:async t=>{await e.setFieldValue("architectures",t)},error:o(e,"architectures")})]}):r.jsxs(r.Fragment,{children:[r.jsx(a.Input,{type:"text",label:"Pockets",placeholder:"E.g. releases, security, etc.",...e.getFieldProps("pockets"),value:e.values.pockets.join(","),onChange:async t=>{await e.setFieldValue("pockets",t.target.value.replace(/\s/g,"").split(",")),await e.setFieldValue("hasPockets",!!t.target.value)},error:o(e,"pockets"),help:"List the pocket names separated by commas."}),r.jsx(a.Input,{type:"text",label:"Components",required:e.values.hasPockets,placeholder:"E.g. main, universe, etc.",...e.getFieldProps("components"),value:e.values.components.join(","),onChange:async t=>{await e.setFieldValue("components",t.target.value.replace(/\s/g,"").split(","))},error:o(e,"components"),help:"List the component names separated by commas."}),r.jsx(a.Input,{type:"text",label:"Architectures",required:e.values.hasPockets,placeholder:"E.g. amd64, riscv, etc.",...e.getFieldProps("architectures"),value:e.values.architectures.join(","),onChange:async t=>{await e.setFieldValue("architectures",t.target.value.replace(/\s/g,"").split(","))},error:o(e,"architectures"),help:"List the architectures separated by commas."})]}),r.jsx(Y,{formik:e}),r.jsx(X,{submitButtonDisabled:e.isSubmitting,submitButtonText:h})]})};export{ge as default};
