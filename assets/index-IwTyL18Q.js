import{y as x,l as h,A as y,F as f,H as o,j as a,m as i,B as u}from"./index-DMPyBbUQ.js";import{S as A}from"./SidePanelFormButtons-DxpfWbMs.js";import{u as F}from"./useRoles-DUnTSJUJ.js";import{t as n}from"./tests-DFnZqbNV.js";import{u as D}from"./constants-H3K2qX6M.js";import"./SidePanelFormButtons.module-D2P5PizG.js";const _={name:"",access_group:""},E=()=>{const c=x(),{closeSidePanel:m}=h(),{createDistributionQuery:l,getDistributionsQuery:d}=D(),{getAccessGroupQuery:p}=F(),{mutateAsync:b}=l,{data:{data:g}={data:[]}}=p(),S=g.map(t=>({label:t.title,value:t.name})),{data:s}=d({include_latest_sync:!0}),e=y({initialValues:_,validationSchema:f().shape({name:o().required("This field is required.").test({test:n.test,message:n.message}).test({params:{getDistributionsResponse:s},test:t=>!((s==null?void 0:s.data)??[]).some(({name:r})=>r==t),message:"It must be unique within the account."}),access_group:o()}),onSubmit:async t=>{try{await b(t),m()}catch(r){c(r)}}});return a.jsxs(i.Form,{onSubmit:e.handleSubmit,noValidate:!0,children:[a.jsx(i.Input,{type:"text",label:"Distribution name",required:!0,...e.getFieldProps("name"),error:u(e,"name")}),a.jsx(i.Select,{label:"Access group",options:[{label:"Select access group",value:""},...S],...e.getFieldProps("access_group"),error:u(e,"access_group")}),a.jsx(A,{submitButtonDisabled:e.isSubmitting,submitButtonText:"Add distribution"})]})};export{E as default};
