import{G as k}from"./index-BROfiJwI.js";import{f as p,p as f,s as b,h as y,k as m,j as i,g as n}from"./index-DNI6uvRV.js";import{u as g}from"./useGPGKeys-Cjfhqldu.js";import{t as u}from"./tests-Qv91US6U.js";import{S as h}from"./SidePanelFormButtons-D5fqMSQT.js";import"./PageMain-D3GJ5hOf.js";import"./useFetchOld-HjUAte7_.js";import"./SidePanelFormButtons.module-tJTvEwdD.js";try{let t=typeof window<"u"?window:typeof global<"u"?global:typeof globalThis<"u"?globalThis:typeof self<"u"?self:{},s=new t.Error().stack;s&&(t._sentryDebugIds=t._sentryDebugIds||{},t._sentryDebugIds[s]="ce8272bf-01ca-4afe-a7e0-79c47d8c4ce1",t._sentryDebugIdIdentifier="sentry-dbid-ce8272bf-01ca-4afe-a7e0-79c47d8c4ce1")}catch{}const x={name:"",material:""},j=()=>{const{closeSidePanel:t}=p(),s=f(),{importGPGKeyQuery:d,getGPGKeysQuery:l}=g(),{mutateAsync:c}=d,{data:a}=l(),e=b({initialValues:x,validationSchema:y().shape({name:m().required("This field is required").test({test:u.test,message:u.message}).test({params:{getGPGKeysResponse:a},test:r=>!((a==null?void 0:a.data)??[]).map(({name:o})=>o).includes(r),message:"It must be unique within the account."}),material:m().required("This field is required").transform(r=>encodeURIComponent(r))}),onSubmit:async r=>{try{await c(r),t()}catch(o){s(o)}}});return i.jsxs(n.Form,{onSubmit:e.handleSubmit,noValidate:!0,children:[i.jsx(n.Input,{type:"text",label:"Name",required:!0,error:e.touched.name&&e.errors.name?e.errors.name:void 0,...e.getFieldProps("name")}),i.jsx(n.Textarea,{label:"Material",required:!0,rows:10,error:e.touched.material&&e.errors.material?e.errors.material:void 0,...e.getFieldProps("material")}),i.jsx(h,{submitButtonDisabled:e.isSubmitting,submitButtonText:"Import key"})]})};export{k as GPGKeysList,j as NewGPGKeyForm,g as useGPGKeys};
