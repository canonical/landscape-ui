import{e as A,f as y,g as T,a4 as v,J as f,Q as j,M as c,ae as r,r as P,k as E,A as w,C as I,j as a,n as o,F as l}from"./index-Cf8C2_r3.js";import{C as R}from"./CodeEditor-3M5xZQFf.js";import{S as _}from"./SidePanelFormButtons-DmhLoXA1.js";import{u as V}from"./useRoles-tAZqJoB9.js";import{u as q,D,S as k}from"./ScriptFormAttachments-CCbOTC-H.js";import{j as N,i as L,r as M}from"./ScriptsTabs-naDwjE0j.js";import"./index-CdxbBMhn.js";import"./SidePanelFormButtons.module-D2P5PizG.js";import"./AttachmentFile-CIscOSUC.js";import"./HeaderWithSearch-DzDmhNgB.js";import"./SingleInstanceTabs.module-Cm1BYFZQ.js";import"./useExpandableRow-DDpIoZai.js";const O=()=>{const i=A(),u=y(),{mutateAsync:m,isPending:h}=T({mutationKey:["scripts","create"],mutationFn:async d=>i.get("CreateScript",{params:d}),onSuccess:async()=>u.invalidateQueries({queryKey:["scripts"]})});return{createScript:m,isCreatingScript:h}},B={title:"",code:"",access_group:v,attachments:{first:null,second:null,third:null,fourth:null,fifth:null},attachmentsToRemove:[]},$=()=>f().shape({title:c().required("This field is required"),access_group:c().nullable(),code:c().test({name:"required",message:"This field is required",test:i=>!!i}),attachments:f().shape({first:r().nullable(),second:r().nullable(),third:r().nullable(),fourth:r().nullable(),fifth:r().nullable()}),attachmentsToRemove:j().of(c())}),ae=()=>{const i=P.useRef(null),{closeSidePanel:u}=E(),m=w(),{getAccessGroupQuery:h}=V(),{createScript:d}=O(),{createScriptAttachment:g}=q(),{data:p}=h(),S=((p==null?void 0:p.data)??[]).map(e=>({label:e.title,value:e.name})),b=async e=>{const n=Object.values(e.attachments).filter(s=>s!==null);try{const s=await d(N(e));n.length&&await Promise.all(await L({attachments:n,createScriptAttachment:g,script_id:s.data.id})),u()}catch(s){m(s)}},t=I({initialValues:B,validationSchema:$(),onSubmit:b}),C=async({target:{files:e}})=>{if(!e)return;const[n]=e,s=t.setFieldValue("code",await n.text());if(t.values.title){await s;return}await Promise.all([t.setFieldValue("title",M(n.name)),s])},F=async e=>{await t.setFieldValue("code",e)},x=()=>{var e;return(e=i.current)==null?void 0:e.click()};return a.jsxs(o.Form,{onSubmit:t.handleSubmit,noValidate:!0,children:[a.jsx(o.Input,{type:"text",label:"Title",required:!0,...t.getFieldProps("title"),error:l(t,"title")}),a.jsx("input",{ref:i,className:"u-hide",type:"file",onChange:C}),a.jsx(R,{label:"Code",value:t.values.code,onChange:F,error:l(t,"code"),required:!0,defaultValue:D,headerContent:a.jsxs(o.Button,{className:"u-no-margin--bottom",appearance:"base",hasIcon:!0,onClick:x,type:"button",children:[a.jsx(o.Icon,{name:"upload"}),a.jsx("span",{children:"Populate from file"})]})}),a.jsx(o.Select,{label:"Access group",...t.getFieldProps("access_group"),options:S,error:l(t,"access_group")}),a.jsxs(a.Fragment,{children:[a.jsx("h5",{children:"List of attachments"}),a.jsx("p",{className:"u-text--muted",children:"Attachments that will be sent along with the script. You can attach up to 5 files, for a maximum of 1.00MB. Filenames must be unique. On the client, the attachments will be placed in the directory whose name is accessible through the environment variable LANDSCAPE_ATTACHMENTS. They'll be deleted once the script has been run."})]}),a.jsx(k,{attachments:t.values.attachments,attachmentsToRemove:t.values.attachmentsToRemove,getFileInputError:e=>l(t,["attachments",e]),initialAttachments:[],onFileInputChange:e=>async n=>{var s;return t.setFieldValue(`attachments.${e}`,((s=n.target.files)==null?void 0:s[0])??null)},onInitialAttachmentDelete:e=>{t.setFieldValue("attachmentsToRemove",[...t.values.attachmentsToRemove,e])}}),a.jsx(_,{submitButtonText:"Create script",submitButtonDisabled:t.isSubmitting})]})};export{ae as default};
