import{G as A}from"./index-C4n2D5IR.js";import{f as p,p as h,s as b,h as f,k as o,j as s,g as i}from"./index-DbtGDqlC.js";import{u as x}from"./useGPGKeys-C-okmIzC.js";import{t as m}from"./tests-DFnZqbNV.js";import{S as y}from"./SidePanelFormButtons-DDo9cAB4.js";import"./PageMain-B46us_QL.js";import"./useFetchOld-B79-JxX7.js";import"./SidePanelFormButtons.module-C5v714vX.js";const S={name:"",material:""},w=()=>{const{closeSidePanel:n}=p(),u=h(),{importGPGKeyQuery:d,getGPGKeysQuery:l}=x(),{mutateAsync:c}=d,{data:r}=l(),e=b({initialValues:S,validationSchema:f().shape({name:o().required("This field is required").test({test:m.test,message:m.message}).test({params:{getGPGKeysResponse:r},test:t=>!((r==null?void 0:r.data)??[]).map(({name:a})=>a).includes(t),message:"It must be unique within the account."}),material:o().required("This field is required").transform(t=>encodeURIComponent(t))}),onSubmit:async t=>{try{await c(t),n()}catch(a){u(a)}}});return s.jsxs(i.Form,{onSubmit:e.handleSubmit,noValidate:!0,children:[s.jsx(i.Input,{type:"text",label:"Name",required:!0,error:e.touched.name&&e.errors.name?e.errors.name:void 0,...e.getFieldProps("name")}),s.jsx(i.Textarea,{label:"Material",required:!0,rows:10,error:e.touched.material&&e.errors.material?e.errors.material:void 0,...e.getFieldProps("material")}),s.jsx(y,{submitButtonDisabled:e.isSubmitting,submitButtonText:"Import key"})]})};export{A as GPGKeysList,w as NewGPGKeyForm,x as useGPGKeys};
