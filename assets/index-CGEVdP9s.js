import{m as S,e as w,f as x,l as N,j as s,g as r}from"./index-DiCHGiBf.js";import{u as L}from"./formik.esm-Bu_XSuDa.js";import{c as v,a as p,g as q}from"./index.esm-D13Ro0EO.js";import{F as P}from"./FileInput-CFsBc2kb.js";import{S as R}from"./SidePanelFormButtons-BHrpF6eW.js";import"./moment-Cl4UOzQZ.js";import"./InfoItem.module-BZ3tYMsb.js";import{useActivities as j}from"./index-BnyJtsr9.js";import{u as A}from"./WslInstanceList.module-Br546CrA.js";import"./SidePanelFormButtons.module-DyBJG5lm.js";import"./InfoItem-BkJhF0SK.js";import"./useFetchOld-Bq-hhBK7.js";import"./useMutation-GmxqXKvs.js";import"./useQuery-CpQuVpeO.js";import"./useConfirm-DvW35yXs.js";import"./useInstances-Oo1w_jyO.js";import"./moment-pTsDcZLH.js";import"./TablePagination.module-DLVph1Z1.js";import"./TablePagination-DEtS7h2L.js";import"./usePageParams-CdcHbu2i.js";import"./EmptyState-BQpqzkSf.js";import"./SearchHelpPopup-Ddnmu3rj.js";const i={instanceType:{slug:"instanceType",label:"Instance type",type:"select",options:[{label:"Custom",value:"custom"}]},cloudInit:{slug:"cloudInit",label:"Cloud-init",type:"file"},instanceName:{slug:"instanceName",label:"Instance name",type:"text"},rootfs:{slug:"rootfs",label:"Rootfs URL",type:"text"}},B=[/^ubuntu$/,/^ubuntu-preview$/,/^ubuntu-[0-9]{2}\.[0-9]{2}$/],E=1,_=a=>{if(a)return new Promise((l,c)=>{const o=new FileReader;o.readAsDataURL(a),o.onload=()=>l(o.result),o.onerror=u=>c(u)})},C=()=>{const{instanceId:a}=S(),l=w(),{closeSidePanel:c}=x(),{notify:o}=N(),{createChildInstanceQuery:u,getWslInstanceNamesQuery:y}=A(),{openActivityDetails:f}=j(),{data:d,isLoading:b}=y(),{mutateAsync:I}=u,t=L({initialValues:{instanceType:"Ubuntu",cloudInit:null,instanceName:"",rootfs:""},validationSchema:v({instanceType:p().required("This field is required"),cloudInit:q().nullable().test("file-size","File size must be less than 1MB",e=>e?e.size===void 0?!1:e.size<=E*1024*1024:!0).test("file-type","File type must be YAML",e=>e?e.type==="application/x-yaml"||e.type==="application/yaml":!0),instanceName:p().when("instanceType",{is:"custom",then:e=>e.required("This field is required").test("not-match-reserved-patterns","Instance name cannot match 'ubuntu', 'ubuntu-preview', or 'ubuntu-<dd>.<dd>'",n=>!B.some(m=>m.test(n.toLowerCase())))}),rootfs:p().url().when("instanceType",{is:"custom",then:e=>e.required("This field is required")})}),onSubmit:async e=>{try{const n=await _(e.cloudInit),m=n?n.split(",")[1]:void 0,{data:g}=await I({parent_id:parseInt(a??""),computer_name:e.instanceType==="custom"?e.instanceName:e.instanceType,rootfs_url:e.instanceType==="custom"?e.rootfs:void 0,cloud_init:m});c(),o.success({message:"You queued a new WSL instance to be installed",actions:[{label:"View details",onClick:()=>f(g)}]})}catch(n){l(n)}}}),h=(d==null?void 0:d.data.map(({label:e,name:n})=>({label:e,value:n})))||[],F=async e=>{await t.setFieldValue("cloudInit",e[0])},T=async()=>{await t.setFieldValue("cloudInit",null)};return s.jsxs(r.Form,{onSubmit:t.handleSubmit,noValidate:!0,children:[s.jsx(r.Select,{label:i.instanceType.label,required:!0,disabled:b,options:[...h,...i.instanceType.options],...t.getFieldProps("instanceType"),error:t.touched.instanceType&&t.errors.instanceType?t.errors.instanceType:void 0}),t.values.instanceType==="custom"&&s.jsxs(s.Fragment,{children:[s.jsx(r.Input,{label:i.instanceName.label,type:i.instanceName.type,required:!0,...t.getFieldProps("instanceName"),error:t.touched.instanceName&&t.errors.instanceName?t.errors.instanceName:void 0}),s.jsx(r.Input,{label:i.rootfs.label,type:i.rootfs.type,required:!0,...t.getFieldProps("rootfs"),error:t.touched.rootfs&&t.errors.rootfs?t.errors.rootfs:void 0})]}),s.jsx(P,{label:i.cloudInit.label,accept:".yaml",...t.getFieldProps("cloudInit"),onFileRemove:T,onFileUpload:F,help:"You can use a cloud-init configuration YAML file under 1MB to register new WSL instances. Cloud-init streamlines the setup by automating installation and configuration tasks.",error:t.touched.cloudInit&&t.errors.cloudInit?t.errors.cloudInit:void 0}),s.jsx(R,{submitButtonDisabled:t.isSubmitting,submitButtonText:"Install",submitButtonAriaLabel:"Install new WSL instance"})]})},oe=C;export{oe as default};
