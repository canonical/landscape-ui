import{M as L,U as q,O as N,af as w,P as n,a6 as A,B as j,o as v,C,F as E,j as s,d as r}from"./index-DdDZs9iJ.js";import{A as O}from"./AssociationBlock-D19zpqMb.js";import{C as B}from"./CodeEditor-vgpfpBQ5.js";import{F as U}from"./FileInput-BMhZBSoE.js";import{S as W}from"./SidePanelFormButtons-BSX-z9y0.js";import{u as D}from"./WslInstancesHeader-BBkFaLUH.js";import{u as V}from"./useRoles-BNFkLHId.js";import{u as $}from"./index-BoTS43jZ.js";import{M as k,R as M,C as z,F as G}from"./constants-CGmSpzVx.js";import"./MultiSelectField-CAV9jDpg.js";import"./useInstances-xzL-A-Ng.js";import"./index-djSi9FWq.js";import"./SidePanelFormButtons.module-BuIu-Bem.js";import"./HeaderWithSearch-CXY4tLKs.js";import"./PageMain-B3ytKPSD.js";import"./useExpandableRow-DKL1BEGd.js";const p={add:{notificationAction:"added",ariaLabel:"Add a new WSL profile",buttonLabel:"Add WSL profile"},duplicate:{notificationAction:"duplicated",ariaLabel:"Duplicate WSL profile",buttonLabel:"Duplicate"}},Q=()=>L().shape({title:n().required("This field is required"),access_group:n().required("This field is required"),description:n().required("This field is required"),instanceType:n().required("This field is required"),rootfsImage:n().when("instanceType",{is:"custom",then:t=>t.required("This field is required"),otherwise:t=>t.notRequired()}),customImageName:n().when("instanceType",{is:"custom",then:t=>t.required("This field is required").test("not-match-reserved-patterns","Instance name cannot match 'ubuntu', 'ubuntu-preview', or 'ubuntu-<dd>.<dd>'",i=>!M.some(a=>a.test(i.toLowerCase()))),otherwise:t=>t.notRequired()}),cloudInitType:n(),cloudInit:w().nullable().when("cloudInitType",{is:t=>t==="file"||t==="text",then:t=>t.required("This field is required").test("file-size","File size must be less than 1MB",i=>(typeof i=="string"&&(i=f(i)),i?i.size===void 0?!1:i.size<=k*1024*1024:!0)),otherwise:t=>t.notRequired()}),all_computers:N(),tags:q().of(n())}),X=t=>t.action==="add"?{title:"",access_group:A,description:"",instanceType:"",customImageName:"",rootfsImage:"",cloudInitType:"",cloudInit:null,all_computers:!1,tags:[]}:{title:`${t.profile.title} (copy)`,access_group:t.profile.access_group,all_computers:t.profile.all_computers,cloudInit:null,cloudInitType:"",description:t.profile.description,tags:t.profile.tags,customImageName:t.profile.image_source?t.profile.image_name:"",instanceType:t.profile.image_source?"custom":t.profile.image_name,rootfsImage:t.profile.image_source||""},f=t=>{const i=new Blob([t],{type:"application/x-yaml"});return new File([i],"myFile.yaml",{type:"application/x-yaml"})},H=t=>{if(t)return new Promise((i,a)=>{const c=new FileReader;c.readAsDataURL(t),c.onload=()=>{i(c.result)},c.onerror=u=>{a(u)}})},Z=async t=>{if(t===null)return;let i;typeof t=="string"?i=f(t):i=t;const a=await H(i);return a?a.split(",")[1]:void 0},J="_block_tz139_1",K={block:J},Ie=t=>{const i=j(),{closeSidePanel:a}=v(),{notify:c}=C(),{getAccessGroupQuery:u}=V(),{getWslInstanceNamesQuery:g}=D(),{createWslProfileQuery:I}=$(),{mutateAsync:b}=I,{data:d}=u(),{data:m,isLoading:h}=g(),y=((m==null?void 0:m.data)??[]).map(({label:o,name:l})=>({label:o,value:l}))||[],T=[{label:"Select",value:""},...y,{label:"From URL",value:"custom"}],_=(d==null?void 0:d.data.map(({name:o,title:l})=>({label:l,value:o})))??[],F=async o=>{try{const l=await Z(e.values.cloudInit),P=(await b({title:o.title,access_group:o.access_group,description:o.description,image_name:o.instanceType==="custom"?o.customImageName:o.instanceType,image_source:o.rootfsImage,cloud_init_contents:l,all_computers:o.all_computers,tags:o.tags})).data.computers.constrained.length;a();const R=t.action==="add"?o.title:t.profile.title;c.success({title:`Profile "${R}" ${p[t.action].notificationAction} successfully`,message:`It has been associated with ${P} instances`})}catch(l){i(l)}},e=E({initialValues:X(t),onSubmit:F,validationSchema:Q()}),S=async o=>{await e.setFieldValue("cloudInit",o[0])},x=async()=>{await e.setFieldValue("cloudInit",null)};return s.jsxs(r.Form,{onSubmit:e.handleSubmit,noValidate:!0,children:[s.jsx(r.Input,{type:"text",label:"Title",required:!0,...e.getFieldProps("title"),error:e.touched.title&&e.errors.title?e.errors.title:void 0}),s.jsx(r.Input,{type:"text",label:"Description",required:!0,...e.getFieldProps("description"),error:e.touched.description&&e.errors.description?e.errors.description:void 0}),s.jsx(r.Select,{label:"Access group","aria-label":"Access group",required:!0,options:_,...e.getFieldProps("access_group"),error:e.touched.access_group&&e.errors.access_group?e.errors.access_group:void 0}),s.jsxs("div",{className:K.block,children:[(e.values.instanceType!==""||e.values.cloudInitType!=="")&&s.jsx(r.Notification,{severity:"caution",title:"Warning",children:s.jsx("span",{children:"Once the profile is added, you cannot modify the RootFS image or Cloud-init file."})}),s.jsx(r.Select,{label:"RootFS image",disabled:h,"aria-label":"RootFS image",options:T,required:!0,...e.getFieldProps("instanceType"),error:e.touched.instanceType&&e.errors.instanceType?e.errors.instanceType:void 0}),e.values.instanceType==="custom"&&s.jsxs(s.Fragment,{children:[s.jsx(r.Input,{label:"Image name",type:"text",...e.getFieldProps("customImageName"),error:e.touched.customImageName&&e.errors.customImageName?e.errors.customImageName:void 0}),s.jsx(r.Input,{type:"text",label:"RootFS image URL",...e.getFieldProps("rootfsImage"),error:e.touched.rootfsImage&&e.errors.rootfsImage?e.errors.rootfsImage:void 0,help:"The file path must be reachable by the affected WSL instances."})]}),s.jsx(r.Select,{label:"Cloud-init","aria-label":"Cloud-init",options:z,...e.getFieldProps("cloudInitType"),error:e.touched.cloudInitType&&e.errors.cloudInitType?e.errors.cloudInitType:void 0}),e.values.cloudInitType==="file"&&s.jsx(U,{label:"Upload cloud-init",labelClassName:"u-off-screen",accept:".yaml",...e.getFieldProps("cloudInit"),onFileRemove:x,onFileUpload:S,help:G,error:e.touched.cloudInit&&e.errors.cloudInit?e.errors.cloudInit:void 0}),e.values.cloudInitType==="text"&&s.jsx(B,{label:"Cloud init configuration",onChange:o=>{e.setFieldValue("cloudInit",o??"")},value:e.values.cloudInit??"",language:"yaml",defaultValue:"# paste cloud-init config here",error:e.touched.cloudInit&&e.errors.cloudInit?e.errors.cloudInit:void 0})]}),s.jsx(O,{formik:e}),s.jsx(W,{submitButtonText:p[t.action].buttonLabel,submitButtonAriaLabel:p[t.action].ariaLabel,submitButtonDisabled:e.isSubmitting})]})};export{Ie as default};
