const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-BPt7XwjU.js","assets/index-P7aY8_ih.js","assets/index-D86Q3Mim.css","assets/index-C-Cemkxt.css"])))=>i.map(i=>d[i]);
import{n as h,j as e,d as i,l as u,F as B,_ as F,w as E,y as s,x as q,az as N,o as L,Y as A,q as T,s as d,L as V}from"./index-P7aY8_ih.js";import{C as w}from"./CheckboxGroup-CPDUu4TP.js";const O="_container_1yori_1",D="_backButton_1yori_14",U="_chevronIcon_1yori_19",m={container:O,backButton:D,chevronIcon:U},$=u.lazy(()=>F(()=>import("./index-BPt7XwjU.js"),__vite__mapDeps([0,1,2,3]))),Q=({action:o})=>{const{closeSidePanel:t,setSidePanelContent:n}=h(),p=()=>{n("Choose an identity provider",e.jsx(u.Suspense,{fallback:e.jsx(B,{}),children:e.jsx($,{})}))};return e.jsxs("div",{className:m.container,children:[o==="add"&&e.jsxs(i.Button,{type:"button",hasIcon:!0,onClick:p,className:m.backButton,children:[e.jsx(i.Icon,{name:"chevron-up",className:m.chevronIcon}),e.jsx("span",{children:"Back"})]}),e.jsx(i.Button,{type:"button",onClick:t,appearance:"base",className:"u-no-margin--bottom",children:"Cancel"}),e.jsx(i.Button,{type:"submit",appearance:"positive",className:"u-no-margin--bottom",children:o==="edit"?"Save changes":"Add ID provider"})]})},R={client_id:"",client_secret:"",enabled:!1,issuer:"",name:""},f=[{label:"openid",value:"openid"},{label:"email",value:"email"}],z=f.map(o=>o.value),Y=o=>E().shape({client_id:o?.provider==="ubuntu-one"?s():s().required("This field is required"),client_secret:o?.provider==="ubuntu-one"?s():s().required("This field is required"),enabled:q(),issuer:o?.provider==="ubuntu-one"?s():s().url().required("This field is required"),name:o?.provider==="ubuntu-one"?s():s().required("This field is required")}),G="_container_1fljc_1",H="_url_1fljc_7",J="_copyButton_1fljc_16",K="_urlContainer_1fljc_21",l={container:G,url:H,copyButton:J,urlContainer:K},Z=o=>{const{action:t,provider:n}=o,[,p]=N(),x=L(),{closeSidePanel:v}=h(),{getSingleProviderQuery:g,addProviderQuery:y,updateProviderQuery:j,toggleUbuntuOneQuery:S}=A(),{data:a}=g({providerId:t==="edit"?n.id:0},{enabled:t==="edit"&&n.provider!=="ubuntu-one"}),{mutateAsync:C}=y,{mutateAsync:I}=j,{mutateAsync:P}=S,r=T({initialValues:R,onSubmit:async c=>{const _={configuration:{issuer:c.issuer,client_id:c.client_id,client_secret:c.client_secret,name:c.name,provider:t==="add"?n.provider_slug:n.provider},enabled:c.enabled};try{t==="add"?await C(_):n.provider==="ubuntu-one"?await P({ubuntu_one:c.enabled}):await I({..._,providerId:n.id}),v()}catch(k){x(k)}},validationSchema:Y(t==="edit"?n:null)});u.useEffect(()=>{t!=="edit"||n.provider!=="ubuntu-one"||r.setFieldValue("enabled",n.enabled)},[t,n]),u.useEffect(()=>{a&&r.setValues({client_id:a.data.configuration.client_id,client_secret:a.data.configuration.client_secret,enabled:a.data.enabled,issuer:a.data.configuration.issuer,name:a.data.configuration.name})},[a]);const b=t==="edit"&&!o.canBeDisabled&&a?.data.enabled;return e.jsxs(i.Form,{onSubmit:r.handleSubmit,noValidate:!0,children:[(t!=="edit"||n.provider!=="ubuntu-one")&&e.jsxs("div",{className:l.container,children:[e.jsx("span",{children:"Callback URL "}),e.jsx(i.Icon,{name:"information"}),e.jsxs("div",{className:l.urlContainer,children:[e.jsx("code",{className:l.url,children:t==="add"?n.redirect_uri:a?.data.redirect_uri}),e.jsx(i.Button,{className:l.copyButton,type:"button",onClick:()=>{p(t==="add"?n.redirect_uri??"":a?.data.redirect_uri??"")},children:"copy"})]}),e.jsx("p",{className:"p-text--small u-text--muted u-no-margin--bottom",children:"You will need to set this in the configuration of your identity provider."})]}),e.jsx(i.Tooltip,{message:b&&"At least one identity provider must be active on the Landscape account.",children:e.jsx(i.Input,{type:"checkbox",label:"Enabled",...r.getFieldProps("enabled"),checked:r.values.enabled,disabled:b,help:`If checked the identity provider will be enabled. ${t==="add"?"when it is created.":"for logging in."}`})}),(t!=="edit"||n.provider!=="ubuntu-one")&&e.jsxs(e.Fragment,{children:[e.jsx(i.Input,{type:"text",label:"Name",required:!0,...r.getFieldProps("name"),autoComplete:"off",error:d(r,"name")}),e.jsx(i.Input,{type:"text",label:"Client ID",required:!0,...r.getFieldProps("client_id"),autoComplete:"off",error:d(r,"client_id")}),e.jsx(i.Input,{type:"text",label:"Client Secret",required:!0,...r.getFieldProps("client_secret"),autoComplete:"off",error:d(r,"client_secret")}),e.jsx(w,{label:"Scopes",name:"scopes",help:e.jsxs(e.Fragment,{children:["Scopes control which user attributes (Claims) the Landscape gets access to. Read more about Scopes in the"," ",e.jsx(V,{to:"https://openid.net/specs/openid-connect-basic-1_0.html#Scopes",target:"_blank",rel:"noopener noreferrer",children:"OIDC docs"}),"."]}),options:f,value:z,disabled:!0,onChange:()=>{}}),e.jsx(i.Input,{type:"url",label:"Issuer",required:!0,...r.getFieldProps("issuer"),autoComplete:"off",error:d(r,"issuer")})]}),e.jsx(Q,{action:t})]})};export{Z as default};
