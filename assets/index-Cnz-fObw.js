import{c as A,e as P,f as v,j as e,N as k,az as L,D as N,i as g,d as l,p as D,a as E,q as M,n as z,L as O,B as u}from"./index-CMVCy8Ns.js";import{u as Y}from"./useRoles-BLa_9bwp.js";const q=()=>{const s=A(),c=P(),{isPending:t,mutateAsync:o}=v({mutationFn:async i=>s.get("AcceptPendingComputers",{params:i}),onSuccess:async()=>c.invalidateQueries({queryKey:["pendingInstances"]})});return{acceptPendingInstances:o,isAcceptingPendingInstances:t}},Q=()=>{const s=A(),c=P(),{isPending:t,mutateAsync:o}=v({mutationFn:async i=>s.get("RejectPendingComputers",{params:i}),onSuccess:async()=>c.invalidateQueries({queryKey:["pendingInstances"]})});return{rejectPendingInstances:o,isRejectingPendingInstances:t}},G=({column:{id:s},row:{original:c}})=>{const t={};return s==="title"?t.role="rowheader":s==="checkbox"?t["aria-label"]=`Toggle ${c.title} instance`:s==="hostname"?t["aria-label"]="Hostname":s==="access_group"?t["aria-label"]="Access group":s==="client_tags"?t["aria-label"]="Tags":s==="creation_time"&&(t["aria-label"]="Creation time"),t},U=(s,c)=>c?s.find(({value:t})=>t===c)?.label??c:e.jsx(k,{}),_=s=>L(s).utc().calendar({sameElse:`${N} [UTC]`,lastWeek:"[Last] dddd, HH:mm [UTC]",sameDay:"[Today], HH:mm [UTC]",lastDay:"[Yesterday], HH:mm [UTC]"}),K="_checkbox_1jtck_1",W="_truncate_1jtck_5",m={checkbox:K,truncate:W},J=({accessGroupOptions:s,instances:c,onSelectedIdsChange:t,selectedIds:o})=>{const i=g.useMemo(()=>c,[c]),n=g.useMemo(()=>[{accessor:"checkbox",className:m.checkbox,Header:()=>e.jsx(l.CheckboxInput,{label:e.jsx("span",{className:"u-off-screen",children:"Toggle all instances"}),inline:!0,checked:o.length===i.length,indeterminate:o.length>0&&o.length<i.length,onChange:()=>t(o.length>0?[]:i.map(({id:a})=>a))}),Cell:({row:{original:a}})=>e.jsx(l.CheckboxInput,{label:e.jsx("span",{className:"u-off-screen",children:`Toggle ${a.title} instance`}),inline:!0,checked:o.includes(a.id),onChange:()=>t(o.includes(a.id)?o.filter(d=>d!==a.id):[...o,a.id])})},{accessor:"title",Header:"name"},{accessor:"hostname",Header:"Hostname"},{accessor:"access_group",Header:"Access group",Cell:({row:{original:a}})=>U(s,a.access_group)},{accessor:"client_tags",Header:"Tags",Cell:({row:{original:a}})=>a.client_tags.length?e.jsx(l.Tooltip,{message:a.client_tags.join(", "),positionElementClassName:m.truncate,children:a.client_tags.join(", ")}):e.jsx(k,{})},{accessor:"creation_time",Header:"Pending since",Cell:({row:{original:a}})=>e.jsx(l.Tooltip,{message:_(a.creation_time),positionElementClassName:m.truncate,children:_(a.creation_time)})}],[i,o.length]);return e.jsx(l.ModularTable,{columns:n,data:i,getCellProps:G})},V="_help_h15yn_1",X={help:V},ne=({instances:s})=>{const[c,t]=g.useState(!1),[o,i]=g.useState(""),[n,a]=g.useState([]),d=D(),{user:j}=E(),{notify:f}=M(),{closeSidePanel:h,changeSidePanelSize:b}=z(),{getAccessGroupQuery:T}=Y(),p=j?.accounts.find(r=>r.name===j?.current_account)?.title,I=()=>{t(!0),b("small")},B=()=>{t(!1),b("large")},{acceptPendingInstances:$,isAcceptingPendingInstances:x}=q(),{rejectPendingInstances:H,isRejectingPendingInstances:y}=Q(),w=async()=>{try{await H({computer_ids:n}),h(),f.success({message:`${n.length} pending ${u(n.length,"instance")} ${u(n.length,"has","have")} been rejected to add to your ${p} organization.`,title:`You have rejected ${n.length} pending ${u(n.length,"instance")}`})}catch(r){d(r)}},R=async()=>{try{await $({access_group:o,computer_ids:n}),h(),f.success({message:`${n.length} pending ${u(n.length,"instance")} ${u(n.length,"has","have")} been successfully added to your ${p} organization.`,title:`You have approved ${n.length} pending ${u(n.length,"instance")}`})}catch(r){d(r)}},{data:S}=T(),C=S?.data.map(({name:r,title:F})=>({label:F,value:r}))??[];return e.jsxs(e.Fragment,{children:[e.jsxs("p",{className:X.help,children:[e.jsxs("span",{children:["You can automatically register new Landscape Client Instances when theyâ€™re configured using a registration key. This eliminates the need for manual approval of each computer. You can enable this feature in the"," "]}),e.jsx(O,{to:"/settings/general",children:"Org. settings"}),e.jsx("span",{children:" or "}),e.jsx("a",{href:"https://ubuntu.com/landscape/docs/managing-computers",target:"_blank",rel:"nofollow noopener noreferrer",children:"learn more"})]}),c&&e.jsx(l.Select,{label:"Access group",options:C,name:"access_group",value:o,onChange:r=>{i(r.target.value)}}),!c&&e.jsx(J,{accessGroupOptions:C,instances:s,onSelectedIdsChange:r=>{a(r)},selectedIds:n}),e.jsxs("div",{className:"form-buttons",children:[e.jsx(l.Button,{type:"button",appearance:"base",onClick:h,children:"Cancel"}),c&&e.jsxs(e.Fragment,{children:[e.jsx(l.Button,{type:"button",onClick:B,children:"Back"}),e.jsx(l.ConfirmationButton,{type:"button",appearance:"positive",disabled:n.length===0,confirmationModalProps:{title:"Approve pending instances",children:e.jsxs("p",{children:["This will approve ",n.length," selected"," ",u(n.length,"instance")," to add to your"," ",p," organization."]}),confirmButtonLabel:"Approve",confirmButtonAppearance:"positive",confirmButtonLoading:x,confirmButtonDisabled:x,onConfirm:R},children:"Approve"})]}),!c&&e.jsxs(e.Fragment,{children:[e.jsx(l.ConfirmationButton,{type:"button",appearance:"negative",disabled:n.length===0,confirmationModalProps:{title:"Reject pending instances",children:e.jsxs("p",{children:["This will reject ",n.length," selected"," ",u(n.length,"instance")," to add to your"," ",p," organization."]}),confirmButtonLabel:"Reject",confirmButtonAppearance:"negative",confirmButtonLoading:y,confirmButtonDisabled:y,onConfirm:w},children:"Reject"}),e.jsx(l.Button,{type:"button",appearance:"positive",disabled:n.length===0,onClick:I,children:"Approve"})]})]})]})};export{ne as default};
