import{e as h,m as S,f as x,j as i,g as c}from"./index-BMhnQnvO.js";import{u as y}from"./formik.esm-CIbWtvkk.js";import{M as I}from"./MultiSelectField-DwiNKGgx.js";import{S as g}from"./SidePanelFormButtons-Sm5GAIF2.js";import{u as j}from"./index-2w39gsXh.js";import{u as A}from"./useRoles-CVnIP7R8.js";import{c as F,a as p,b as q}from"./index.esm-Cg6cKhK8.js";import"./SidePanelFormButtons.module-D1MffuBu.js";import"./PageMain-Do4tk6tv.js";import"./EmptyState-ClMN1u86.js";import"./useFetchOld-Cff5y19B.js";import"./useMutation-Diy-BhWO.js";import"./useQuery-Dxk6aJEc.js";import"./TablePagination-BdWPaBG6.js";import"./TablePagination.module-DLVph1Z1.js";import"./usePageParams-C2gko9oh.js";import"./useConfirm-DBWWlNvT.js";import"./InfoItem-B9r-ZevM.js";import"./NoData-D_FYardG.js";import"./moment-C5S46NFB.js";const P=r=>F().shape({email:p().required("This field is required.").email("Please provide a valid email address").test({name:"unique-email",params:{invitations:r},test:(s,{createError:o,parent:n})=>{const a=r.find(({email:m})=>m===s);return!a||o({message:`${n.name??a.name} is already invited to this account`})}}),name:p().required("This field is required."),roles:q().of(p())}),$={email:"",name:"",roles:[]},V=()=>{const r=h(),{notify:s}=S(),{getInvitationsQuery:o,inviteAdministratorQuery:n}=j(),{getRolesQuery:a}=A(),{closeSidePanel:m}=x(),{data:l}=o(),{mutateAsync:v}=n,b=async t=>{try{await v(t),m(),s.success({title:"You sent an administrator invite",message:`${t.name} will receive an invitation email`})}catch(u){r(u)}},e=y({initialValues:$,validationSchema:P((l==null?void 0:l.data.results)??[]),onSubmit:b}),{data:d}=a(),f=(d==null?void 0:d.data.map(({name:t})=>({label:t,value:t})))??[];return i.jsxs(c.Form,{onSubmit:e.handleSubmit,noValidate:!0,children:[i.jsx("p",{children:"An invitation, sent by email, contains a link a prospective administrator can use to join this account."}),i.jsx(c.Input,{type:"text",label:"Name",autoComplete:"off",required:!0,...e.getFieldProps("name"),error:e.touched.name&&e.errors.name?e.errors.name:void 0}),i.jsx(c.Input,{type:"email",label:"Email address",autoComplete:"off",required:!0,...e.getFieldProps("email"),error:e.touched.email&&e.errors.email?e.errors.email:void 0}),i.jsx(I,{variant:"condensed",label:"Roles",items:f,selectedItems:f.filter(({value:t})=>e.values.roles.includes(t)),onItemsUpdate:t=>e.setFieldValue("roles",t.map(({value:u})=>u))}),i.jsx(g,{submitButtonDisabled:e.isSubmitting,submitButtonText:"Send invite"})]})},K=V;export{K as default};
