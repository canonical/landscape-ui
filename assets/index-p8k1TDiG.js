const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-CstMciTH.js","assets/index-BTMs-AKI.js","assets/index-BGd_Cbys.css","assets/SidePanelFormButtons-Dl2Ln5wW.js","assets/SidePanelFormButtons.module-D2P5PizG.js","assets/SidePanelFormButtons-JM1G8Sq6.css","assets/useGPGKeys-CqISWO4-.js","assets/tests-DFnZqbNV.js","assets/useRoles-DFbkazyC.js","assets/useAPTSources-CuNDraZd.js","assets/PageMain-DfDataHn.js","assets/PageMain--v5xNZ5p.css","assets/index-Cz9CfuJq.css"])))=>i.map(i=>d[i]);
import{A as g,ah as b,j as e,al as x,n as c,r as l,ad as T,m as h,p as u,E as j,$ as _}from"./index-BTMs-AKI.js";import{P as y,a as f,b as S}from"./PageMain-DfDataHn.js";import{u as m}from"./useAPTSources-CuNDraZd.js";const v=({aptSource:s})=>{const{removeAPTSourceQuery:o}=m(),n=g(),{value:a,setTrue:t,setFalse:r}=b(),{mutateAsync:p,isPending:i}=o,A=async()=>{try{await p({name:s.name})}catch(P){n(P)}finally{r()}};return e.jsxs(e.Fragment,{children:[e.jsx(x,{toggleAriaLabel:`${s.name} APT source actions`,destructiveActions:[{icon:c.ICONS.delete,label:"Delete","aria-label":`Remove ${s.name} APT source`,onClick:t}]}),a&&e.jsx(c.ConfirmationModal,{close:r,title:`Deleting ${s.name} APT source`,confirmButtonLabel:"Delete",confirmButtonAppearance:"negative",confirmButtonLoading:i,confirmButtonDisabled:i,onConfirm:A,children:e.jsx("p",{children:"Are you sure? This action is permanent and cannot be undone."})})]})},L="_line_1odl9_1",C="_accessGroup_1odl9_10",d={line:L,accessGroup:C},M=s=>{const o={};switch(s.column.id){case"name":o.role="rowheader";break;case"access_group":o["aria-label"]="Access group";break;case"line":o["aria-label"]="Line";break;case"id":o["aria-label"]="Actions";break}return o},N=({items:s})=>{const o=l.useMemo(()=>[{accessor:"name",Header:"Name"},{accessor:"access_group",Header:"Access group",className:d.accessGroup},{accessor:"line",Header:"Line",className:d.line},{...T,Cell:({row:n})=>e.jsx(v,{aptSource:n.original})}],[]);return e.jsx(c.ModularTable,{columns:o,data:l.useMemo(()=>s,[s.length]),emptyMsg:"No APT sources yet.",getCellProps:M})},k=l.lazy(async()=>_(()=>import("./index-CstMciTH.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12])).then(s=>({default:s.NewAPTSourceForm}))),w=()=>{const{setSidePanelContent:s}=h(),{getAPTSourcesQuery:o}=m(),{data:n,isLoading:a}=o(),t=(n==null?void 0:n.data)??[],r=()=>{s("Add APT source",e.jsx(l.Suspense,{fallback:e.jsx(u,{}),children:e.jsx(k,{})}))};return e.jsxs(y,{children:[e.jsx(f,{title:"APT sources",actions:[e.jsx(c.Button,{appearance:"positive",onClick:r,type:"button",children:"Add APT source"},"new-key-button")]}),e.jsxs(S,{children:[a&&e.jsx(u,{}),!a&&t.length===0&&e.jsx(j,{title:"No APT sources found",icon:"connected",body:e.jsxs(e.Fragment,{children:[e.jsx("p",{className:"u-no-margin--bottom",children:"You havenâ€™t added any APT sources yet."}),e.jsx("a",{href:"https://ubuntu.com/landscape/docs/repositories",target:"_blank",rel:"nofollow noopener noreferrer",children:"How to manage APT sources in Landscape"})]}),cta:[e.jsx(c.Button,{appearance:"positive",onClick:r,type:"button",children:"Add APT source"},"table-add-new-mirror")]}),!a&&t.length>0&&e.jsx(N,{items:t})]})]})},D=Object.freeze(Object.defineProperty({__proto__:null,default:w},Symbol.toStringTag,{value:"Module"}));export{N as A,D as i};
