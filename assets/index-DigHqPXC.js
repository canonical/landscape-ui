const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-DnxQ6b-v.js","assets/index-C_124pJU.js","assets/index-tBQFzVrl.css","assets/useGPGKeys-ChTsjBGk.js","assets/tests-DFnZqbNV.js","assets/SidePanelFormButtons-DT43jWWI.js","assets/SidePanelFormButtons.module-D2P5PizG.js","assets/SidePanelFormButtons-JM1G8Sq6.css","assets/PageMain-Bw-26RLl.js","assets/PageMain--v5xNZ5p.css"])))=>i.map(i=>d[i]);
import{y as g,ag as P,j as e,al as b,m as c,r as i,ac as h,l as f,o as d,E as x,_}from"./index-C_124pJU.js";import{P as j,a as k,b as v}from"./PageMain-Bw-26RLl.js";import{u as p}from"./useGPGKeys-ChTsjBGk.js";const C=({gpgKey:s})=>{const a=g(),{removeGPGKeyQuery:t}=p(),{value:n,setTrue:o,setFalse:r}=P(),{mutateAsync:u,isPending:l}=t,y=async()=>{try{await u({name:s.name})}catch(G){a(G)}r()};return e.jsxs(e.Fragment,{children:[e.jsx(b,{toggleAriaLabel:`${s.name} GPG key actions`,destructiveActions:[{icon:c.ICONS.delete,label:"Remove","aria-label":`Remove ${s.name} GPG key`,onClick:o}]}),n&&e.jsx(c.ConfirmationModal,{close:r,title:`Deleting ${s.name} GPG key`,confirmButtonLabel:"Delete",confirmButtonAppearance:"negative",confirmButtonLoading:l,confirmButtonDisabled:l,onConfirm:y,children:e.jsx("p",{children:"Are you sure? This action is permanent and cannot be undone."})})]})},A="_fingerprint_wf9ay_1",L="_accessType_wf9ay_10",m={fingerprint:A,accessType:L},w=s=>{const a={};switch(s.column.id){case"name":a.role="rowheader";break;case"has_secret":a["aria-label"]="Access type";break;case"fingerprint":a["aria-label"]="Fingerprint";break;case"actions":a["aria-label"]="Actions";break}return a},M=({items:s})=>{const a=i.useMemo(()=>s,[s.length]),t=i.useMemo(()=>[{accessor:"name",Header:"Name"},{accessor:"has_secret",Header:"Access type",className:m.accessType,Cell:({row:n})=>n.original.has_secret?"Private":"Public"},{accessor:"fingerprint",Header:"Fingerprint",className:m.fingerprint},{...h,Cell:({row:n})=>e.jsx(C,{gpgKey:n.original})}],[a]);return e.jsx(c.ModularTable,{columns:t,data:a,getCellProps:w,emptyMsg:"You have no GPG keys yet."})},S=i.lazy(async()=>_(()=>import("./index-DnxQ6b-v.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9])).then(s=>({default:s.NewGPGKeyForm}))),T=()=>{const{setSidePanelContent:s}=f(),{getGPGKeysQuery:a}=p(),{data:t,isLoading:n}=a(),o=(t==null?void 0:t.data)??[],r=()=>{s("Import GPG key",e.jsx(i.Suspense,{fallback:e.jsx(d,{}),children:e.jsx(S,{})}))};return e.jsxs(j,{children:[e.jsx(k,{title:"GPG keys",actions:[e.jsx(c.Button,{appearance:"positive",onClick:r,type:"button","aria-label":"Import GPG key",children:"Import key"},"new-key-button")]}),e.jsxs(v,{children:[n&&e.jsx(d,{}),!n&&o.length===0&&e.jsx(x,{title:"No GPG keys found",icon:"connected",body:e.jsxs(e.Fragment,{children:[e.jsx("p",{className:"u-no-margin--bottom",children:"You haven't added any GPG keys yet."}),e.jsx("a",{href:"https://ubuntu.com/landscape/docs/repositories",target:"_blank",rel:"nofollow noopener noreferrer",children:"How to manage GPG keys in Landscape"})]}),cta:[e.jsx(c.Button,{appearance:"positive",onClick:r,type:"button","aria-label":"Import GPG key",children:"Import key"},"table-add-new-mirror")]}),!n&&o.length>0&&e.jsx(M,{items:o})]})]})},B=Object.freeze(Object.defineProperty({__proto__:null,default:T},Symbol.toStringTag,{value:"Module"}));export{M as G,B as i};
