import{j as e,N,d as a,p as S,r as p,g as I,ai as E,L as T,E as x,a as v,f as P,o as k,q as d,aw as w}from"./index-gkGXmHMG.js";import{E as A,d as L}from"./EmployeeGroupIdentityIssuerList-D3rL6eTz.js";import{u as O,E as M}from"./index-FKbE5cpX.js";import{u as F}from"./useGetEmployeeGroups-Cf1qAU05.js";import"./HeaderWithSearch-DDygtNaw.js";import"./index-RifhI6X-.js";import"./SidePanelTablePagination-LnjeK1Ty.js";const G="_container_86anj_1",H="_position_86anj_7",D="_chip_86anj_11",h={container:G,position:H,chip:D},R=({fileName:o,isDefault:t,version:n})=>!o||!n?e.jsx(N,{}):e.jsxs("div",{className:h.container,children:[e.jsxs("span",{children:[o,", v",n]}),t&&e.jsx(a.Tooltip,{position:"top-center",positionElementClassName:h.position,message:"This group will inherit default autoinstall file since none has been assigned.",children:e.jsx("span",{className:S("p-chip is-dense u-no-margin--bottom",h.chip),children:e.jsx("span",{className:"p-chip__value",children:"default"})})})]}),Y=()=>({column:o})=>{const t={};return o.id==="name"?t.role="rowheader":o.id==="employees"?t["aria-label"]="Checkbox":o.id==="employee_count"?t["aria-label"]="Associated employees":o.id==="autoinstall_file.filename"?t["aria-label"]="Autoinstall file":o.id==="priority"?t["aria-label"]="Priority":o.id==="actions"&&(t["aria-label"]="Actions"),t},U=({onSelectedEmployeeGroupsChange:o,selectedEmployeeGroups:t,employeeGroups:n})=>{const i=p.useMemo(()=>n,[n]),l=s=>{o(t.includes(s)?t.filter(c=>c!==s):[...t,s])};I("employeeGroups",n.map(({id:s})=>s.toString()));const r=p.useMemo(()=>[{accessor:"employees",className:"checkbox-column",Header:()=>e.jsx(a.CheckboxInput,{inline:!0,label:e.jsx("span",{className:"u-off-screen",children:"Toggle all employee groups"}),disabled:i.length===0,indeterminate:t.length>0&&t.length<n.length,checked:t.length>0&&t.length===n.length,onChange:()=>{o(t.length>0?[]:n.map(({id:s})=>s))}}),Cell:({row:{original:s}})=>e.jsx(a.CheckboxInput,{labelClassName:"u-no-margin--bottom u-no-padding--top",label:e.jsx("span",{className:"u-off-screen",children:`Toggle ${s.name}`}),name:"employee-group-checkbox",checked:t.includes(s.id),onChange:()=>{l(s.id)}})},{accessor:"name",Header:"Name",Cell:({row:{original:s}})=>e.jsx(e.Fragment,{children:s.name})},{accessor:"employee_count",Header:"Employees",Cell:({row:{original:s}})=>s.employee_count?e.jsx(T,{to:`/settings/employees?tab=employees&employeeGroups=${s.id}`,children:s.employee_count}):e.jsx(e.Fragment,{children:"0"})},{accessor:"autoinstall_file.filename",Header:"Assigned autoinstall file",Cell:({row:{original:s}})=>e.jsx(R,{fileName:s.autoinstall_file?.filename,isDefault:s.autoinstall_file?.is_default,version:s.autoinstall_file?.version})},{accessor:"priority",Header:"Priority",Cell:({row:s})=>e.jsx(e.Fragment,{children:s.original.priority||"N/A"})},{...E,Cell:({row:{original:s}})=>e.jsx(A,{employeeGroup:s})}],[i,t]);return e.jsx(a.ModularTable,{columns:r,data:i,getCellProps:Y(),emptyMsg:"No employee groups found"})},g={title:"You don't have any employee groups imported yet.",body:"Import employee groups to assign autoinstall files and streamline employees' instance setup process. Employee information will be fetched from your organization's identity providers."},y={title:"You need to set up a supported identity provider to import employee groups.",body:"To import employee groups, you must set up a supported identity provider with a service account that authenticates using short-lived credentials or a signed JWT for access tokens."},B=({handleImportEmployeeGroups:o})=>e.jsx(x,{title:g.title,body:g.body,cta:[e.jsxs(a.Button,{appearance:"positive",className:"p-segmented-control__button",hasIcon:!0,onClick:o,children:[e.jsx(a.Icon,{name:a.ICONS.plus,light:!0}),e.jsx("span",{children:"Import employee groups"})]},"import-employee-groups")]}),$=()=>{const o=v();return e.jsx(x,{title:y.title,body:y.body,cta:[e.jsxs(a.Button,{appearance:"positive",className:"p-segmented-control__button",hasIcon:!0,onClick:async()=>o("/settings/identity-providers"),children:[e.jsx(a.Icon,{name:a.ICONS.plus,light:!0}),e.jsx("span",{children:"Add identity provider"})]},"import-employee-groups")]})},X=()=>{const{search:o,autoinstallFiles:t}=P(),[n,i]=p.useState([]),{employeeGroups:l,employeeGroupsCount:r,isEmployeeGroupsLoading:s}=F({with_autoinstall_file:!0,with_employee_count:!0}),{oidcDirectoryIssuers:c,isOidcIssuersLoading:f}=O(),{setSidePanelContent:j}=k(),_=()=>{j("Choose an identity issuer",e.jsx(p.Suspense,{fallback:e.jsx(d,{}),children:e.jsx(M,{})}))},u=s||f,b=!u&&c.length===0,C=!u&&r===0&&!o&&!t.length;return u&&!o&&!t.length?e.jsx(d,{}):b?e.jsx($,{}):C?e.jsx(B,{handleImportEmployeeGroups:_}):e.jsxs(e.Fragment,{children:[e.jsx(L,{selectedEmployeeGroups:n,employeeGroups:l,setSelectedEmployeeGroups:m=>{i(m)}}),s?e.jsx(d,{}):e.jsxs(e.Fragment,{children:[e.jsx(U,{employeeGroups:l,onSelectedEmployeeGroupsChange:m=>{i(m)},selectedEmployeeGroups:n}),e.jsx(w,{totalItems:r,currentItemCount:l.length})]})]})};export{X as default};
