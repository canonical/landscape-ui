const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/NewGPGKeyForm-gq1NhJmZ.js","assets/index-D3R13Zz0.js","assets/index-DEuNBe7s.css","assets/useGPGKeys-BQ9im4hr.js","assets/useFetchOld-D83Rawm4.js","assets/tests-DFnZqbNV.js","assets/SidePanelFormButtons-DuRl5zt_.js","assets/SidePanelFormButtons.module-yv6Qz3cN.js","assets/SidePanelFormButtons-CxAXtF89.css"])))=>i.map(i=>d[i]);
import{k as G,r as l,j as e,h as a,_ as P,i as h,t as m,E as f}from"./index-D3R13Zz0.js";import{P as x,a as b,b as j}from"./PageMain-DESwZ53x.js";import{u as y}from"./useGPGKeys-BQ9im4hr.js";import"./useFetchOld-D83Rawm4.js";const _="_fingerprint_xo0if_1",k="_accessType_xo0if_10",v="_actions_xo0if_19",p={fingerprint:_,accessType:k,actions:v},N=({items:c})=>{const{removeGPGKeyQuery:d}=y(),o=G(),{mutateAsync:i,isPending:t}=d,r=l.useMemo(()=>c,[c.length]),u=async s=>{try{await i({name:s})}catch(n){o(n)}},g=l.useMemo(()=>[{accessor:"name",Header:"Name"},{accessor:"has_secret",Header:"Access type",className:p.accessType,Cell:({row:s})=>s.original.has_secret?"Private":"Public"},{accessor:"fingerprint",Header:"Fingerprint",className:p.fingerprint},{accessor:"actions",className:p.actions,Cell:({row:s})=>e.jsx("div",{className:"divided-blocks",children:e.jsx("div",{className:"divided-blocks__item",children:e.jsx(a.ConfirmationButton,{className:"u-no-margin--bottom u-no-padding--left is-small has-icon",type:"button",appearance:"base","aria-label":`Remove ${s.original.name} GPG key`,confirmationModalProps:{title:`Deleting ${s.original.name} GPG key`,children:e.jsx("p",{children:"Are you sure? This action is permanent and cannot be undone."}),confirmButtonLabel:"Delete",confirmButtonAppearance:"negative",confirmButtonLoading:t,confirmButtonDisabled:t,onConfirm:()=>u(s.original.name)},children:e.jsx(a.Tooltip,{position:"top-center",message:"Delete",children:e.jsx(a.Icon,{name:a.ICONS.delete})})})})})}],[r]);return e.jsx(a.ModularTable,{columns:g,data:r,getCellProps:({column:s})=>{const n={};return s.id==="name"?n.role="rowheader":s.id==="has_secret"?n["aria-label"]="Access type":s.id==="fingerprint"?n["aria-label"]="Fingerprint":s.id==="actions"&&(n["aria-label"]="Actions"),n},emptyMsg:"You have no GPG keys yet."})},C=l.lazy(()=>P(()=>import("./NewGPGKeyForm-gq1NhJmZ.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8]))),B=()=>{const{setSidePanelContent:c}=h(),{getGPGKeysQuery:d}=y(),{data:o,isLoading:i}=d(),t=(o==null?void 0:o.data)??[],r=()=>{c("Import GPG key",e.jsx(l.Suspense,{fallback:e.jsx(m,{}),children:e.jsx(C,{})}))};return e.jsxs(x,{children:[e.jsx(b,{title:"GPG Keys",actions:[e.jsx(a.Button,{appearance:"positive",onClick:r,type:"button","aria-label":"Import GPG key",children:"Import key"},"new-key-button")]}),e.jsxs(j,{children:[i&&e.jsx(m,{}),!i&&t.length===0&&e.jsx(f,{title:"No GPG keys found",icon:"connected",body:e.jsxs(e.Fragment,{children:[e.jsx("p",{className:"u-no-margin--bottom",children:"You havenâ€™t added any GPG keys yet."}),e.jsx("a",{href:"https://ubuntu.com/landscape/docs/repositories",target:"_blank",rel:"nofollow noopener noreferrer",children:"How to manage GPG keys in Landscape"})]}),cta:[e.jsx(a.Button,{appearance:"positive",onClick:r,type:"button","aria-label":"Import GPG key",children:"Import key"},"table-add-new-mirror")]}),!i&&t.length>0&&e.jsx(N,{items:t})]})]})};export{B as default};
