import{b as q,c as r,d as u}from"./index-BHRcNEjD.js";import{u as G}from"./useFetchOld-CODS07ol.js";try{let s=typeof window<"u"?window:typeof global<"u"?global:typeof globalThis<"u"?globalThis:typeof self<"u"?self:{},o=new s.Error().stack;o&&(s._sentryDebugIds=s._sentryDebugIds||{},s._sentryDebugIds[o]="bf2fdf2b-c403-43f8-905a-55faf40642b3",s._sentryDebugIdIdentifier="sentry-dbid-bf2fdf2b-c403-43f8-905a-55faf40642b3")}catch{}function A(){const s=G(),o=q(),n=(e={},t={})=>u({queryKey:["accessGroups"],queryFn:()=>s.get("GetAccessGroups",{params:e}),...t}),i=r({mutationFn:e=>s.get("CreateAccessGroup",{params:e}),onSuccess:()=>o.invalidateQueries({queryKey:["accessGroups"]})}),a=r({mutationFn:e=>s.get("RemoveAccessGroup",{params:e}),onSuccess:()=>o.invalidateQueries({queryKey:["accessGroups"]})}),c=(e={},t={})=>u({queryKey:["roles"],queryFn:()=>s.get("GetRoles",{params:e}),...t}),y=r({mutationFn:e=>s.get("CreateRole",{params:e}),onSuccess:()=>o.invalidateQueries({queryKey:["roles"]})}),l=r({mutationFn:e=>s.get("CopyRole",{params:e}),onSuccess:()=>o.invalidateQueries({queryKey:["roles"]})}),d=r({mutationFn:e=>s.get("RemoveRole",{params:e}),onSuccess:()=>Promise.all([o.invalidateQueries({queryKey:["roles"]}),o.invalidateQueries({queryKey:["administrators"]})])}),m=r({mutationFn:e=>s.get("AddAccessGroupsToRole",{params:e}),onSuccess:()=>o.invalidateQueries({queryKey:["roles"]})}),Q=r({mutationFn:e=>s.get("RemoveAccessGroupsFromRole",{params:e}),onSuccess:()=>o.invalidateQueries({queryKey:["roles"]})}),p=(e={},t={})=>u({queryKey:["permissions"],queryFn:()=>s.get("GetPermissions",{params:e}),...t}),g=r({mutationFn:e=>s.get("AddPermissionsToRole",{params:e}),onSuccess:()=>o.invalidateQueries({queryKey:["roles"]})}),f=r({mutationFn:e=>s.get("RemovePermissionsFromRole",{params:e}),onSuccess:()=>o.invalidateQueries({queryKey:["roles"]})}),R=r({mutationFn:e=>s.get("AddPersonsToRole",{params:e}),onSuccess:()=>Promise.all([o.invalidateQueries({queryKey:["roles"]}),o.invalidateQueries({queryKey:["administrators"]})])}),v=r({mutationFn:e=>s.get("RemovePersonsFromRole",{params:e}),onSuccess:()=>Promise.all([o.invalidateQueries({queryKey:["roles"]}),o.invalidateQueries({queryKey:["administrators"]})])}),F=r({mutationFn:e=>s.get("ChangeComputersAccessGroup",{params:e}),onSuccess:()=>o.invalidateQueries({queryKey:["instances"]})});return{getAccessGroupQuery:n,createAccessGroupQuery:i,removeAccessGroupQuery:a,getRolesQuery:c,createRoleQuery:y,copyRoleQuery:l,removeRoleQuery:d,addAccessGroupsToRoleQuery:m,removeAccessGroupsFromRoleQuery:Q,getPermissionsQuery:p,addPermissionsToRoleQuery:g,removePermissionsFromRoleQuery:f,addPersonsToRoleQuery:R,removePersonsFromRoleQuery:v,changeComputersAccessGroupQuery:F}}export{A as u};
