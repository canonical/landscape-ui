import{y as S,N as g,B as u,q as x,s as h,p as I,t as j,j as i,e as d,v as p}from"./index-CIJ7mRT9.js";import{M as F}from"./MultiSelectField-ChJHZVah.js";import{S as q}from"./SidePanelFormButtons-Cffo84ct.js";import{u as A}from"./index-BAQRciq0.js";import{u as R}from"./useRoles-BCAvmoVt.js";import"./SidePanelFormButtons.module-CcPyiogC.js";import"./PageMain-CXrwNRQQ.js";import"./constants-CECEDqqQ.js";import"./HeaderWithSearch-DbK_8pcN.js";const P=s=>S().shape({email:u().required("This field is required.").email("Please provide a valid email address").test({name:"unique-email",params:{invitations:s},test:(r,{createError:o,parent:n})=>{const a=s.find(({email:l})=>l===r);return!a||o({message:`${n.name??a.name} is already invited to this account`})}}),name:u().required("This field is required."),roles:g().of(u())}),E={email:"",name:"",roles:[]},D=()=>{const s=x(),{notify:r}=h(),{getInvitationsQuery:o,inviteAdministratorQuery:n}=A(),{getRolesQuery:a}=R(),{closeSidePanel:l}=I(),{data:f}=o(),{mutateAsync:v}=n,b=async e=>{try{await v(e),l(),r.success({title:"You sent an administrator invite",message:`${e.name} will receive an invitation email`})}catch(m){s(m)}},t=j({initialValues:E,validationSchema:P(f?.data.results??[]),onSubmit:b}),{data:y}=a(),c=y?.data.map(({name:e})=>({label:e,value:e}))??[];return i.jsxs(d.Form,{onSubmit:t.handleSubmit,noValidate:!0,children:[i.jsx("p",{children:"An invitation, sent by email, contains a link a prospective administrator can use to join this account."}),i.jsx(d.Input,{type:"text",label:"Name",autoComplete:"off",required:!0,...t.getFieldProps("name"),error:p(t,"name")}),i.jsx(d.Input,{type:"email",label:"Email address",autoComplete:"off",required:!0,...t.getFieldProps("email"),error:p(t,"email")}),i.jsx(F,{variant:"condensed",label:"Roles",items:c,selectedItems:c.filter(({value:e})=>t.values.roles.includes(e)),onItemsUpdate:e=>t.setFieldValue("roles",e.map(({value:m})=>m))}),i.jsx(q,{submitButtonDisabled:t.isSubmitting,submitButtonText:"Send invite"})]})};export{D as default};
