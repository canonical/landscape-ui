import{e as v,f as A,g as T,C as f,K as j,G as c,a9 as i,r as P,l as w,y as I,A as E,j as a,m as o}from"./index-CmxBU4NC.js";import{C as R}from"./CodeEditor-DffCYE7-.js";import{S as V}from"./SidePanelFormButtons-mHwZFPQl.js";import{u as _}from"./useRoles-M8RXtHI6.js";import{g as l}from"./formikErrors-Bw8iTXYS.js";import{u as q,D,S as k}from"./ScriptFormAttachments-Byb8T86e.js";import{j as N,i as B,r as L}from"./ScriptsTabs-CunTSCLw.js";import"./index-DYDf0Nrs.js";import"./SidePanelFormButtons.module-D2P5PizG.js";import"./AttachmentFile-CG-x9pni.js";import"./TruncatedCell-Rqs9zf5f.js";import"./HeaderWithSearch-BJGK9Eki.js";import"./SingleInstanceTabs.module-Cm1BYFZQ.js";const O=()=>{const r=v(),u=A(),{mutateAsync:m,isPending:h}=T({mutationKey:["scripts","create"],mutationFn:async p=>r.get("CreateScript",{params:p}),onSuccess:async()=>u.invalidateQueries({queryKey:["scripts"]})});return{createScript:m,isCreatingScript:h}},$={title:"",code:"",access_group:"",attachments:{first:null,second:null,third:null,fourth:null,fifth:null},attachmentsToRemove:[]},G=()=>f().shape({title:c().required("This field is required"),access_group:c().nullable(),code:c().test({name:"required",message:"This field is required",test:r=>!!r}),attachments:f().shape({first:i().nullable(),second:i().nullable(),third:i().nullable(),fourth:i().nullable(),fifth:i().nullable()}),attachmentsToRemove:j().of(c())}),se=()=>{const r=P.useRef(null),{closeSidePanel:u}=w(),m=I(),{getAccessGroupQuery:h}=_(),{createScript:p}=O(),{createScriptAttachment:g}=q(),{data:d}=h(),b=((d==null?void 0:d.data)??[]).map(e=>({label:e.title,value:e.name})),S=[{label:"Select access group",value:""},...b],C=async e=>{const n=Object.values(e.attachments).filter(s=>s!==null);try{const s=await p(N(e));n.length&&await Promise.all(await B({attachments:n,createScriptAttachment:g,script_id:s.data.id})),u()}catch(s){m(s)}},t=E({initialValues:$,validationSchema:G(),onSubmit:C}),x=async({target:{files:e}})=>{if(!e)return;const[n]=e,s=t.setFieldValue("code",await n.text());if(t.values.title){await s;return}await Promise.all([t.setFieldValue("title",L(n.name)),s])},F=async e=>{await t.setFieldValue("code",e)},y=()=>{var e;return(e=r.current)==null?void 0:e.click()};return a.jsxs(o.Form,{onSubmit:t.handleSubmit,noValidate:!0,children:[a.jsx(o.Input,{type:"text",label:"Title",required:!0,...t.getFieldProps("title"),error:l(t,"title")}),a.jsx("input",{ref:r,className:"u-hide",type:"file",onChange:x}),a.jsx(R,{label:"Code",value:t.values.code,onChange:F,error:l(t,"code"),required:!0,defaultValue:D,headerContent:a.jsxs(o.Button,{className:"u-no-margin--bottom",appearance:"base",hasIcon:!0,onClick:y,type:"button",children:[a.jsx(o.Icon,{name:"upload"}),a.jsx("span",{children:"Populate from file"})]})}),a.jsx(o.Select,{label:"Access group",...t.getFieldProps("access_group"),options:S,error:l(t,"access_group")}),a.jsxs(a.Fragment,{children:[a.jsx("h5",{children:"List of attachments"}),a.jsx("p",{className:"u-text--muted",children:"Attachments that will be sent along with the script. You can attach up to 5 files, for a maximum of 1.00MB. Filenames must be unique. On the client, the attachments will be placed in the directory whose name is accessible through the environment variable LANDSCAPE_ATTACHMENTS. They'll be deleted once the script has been run."})]}),a.jsx(k,{attachments:t.values.attachments,attachmentsToRemove:t.values.attachmentsToRemove,getFileInputError:e=>l(t,["attachments",e]),initialAttachments:[],onFileInputChange:e=>async n=>{var s;return t.setFieldValue(`attachments.${e}`,((s=n.target.files)==null?void 0:s[0])??null)},onInitialAttachmentDelete:e=>{t.setFieldValue("attachmentsToRemove",[...t.values.attachmentsToRemove,e])}}),a.jsx(V,{submitButtonText:"Create script",submitButtonDisabled:t.isSubmitting})]})};export{se as default};
