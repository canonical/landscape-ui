import{i as g,v as p,l as S,q as b,s as A,g as T,t as f,j as n,h as F}from"./index-vDh6p1re.js";import{M as I}from"./MultiSelectField-CYc5ErpZ.js";import{u as h}from"./useInstances-Df27HUCE.js";import{g as x}from"./formikErrors-Bw8iTXYS.js";import{S as y}from"./SidePanelFormButtons-CrzoUcfJ.js";import"./useFetchOld-Dh4_z9Or.js";import"./SidePanelFormButtons.module-D2P5PizG.js";const _={tags:[]},D=g({tags:p().of(S()).min(1,"At least one tag is required")}),P=({selected:e})=>{const o=b(),{notify:r}=A(),{closeSidePanel:m}=T(),{addTagsToInstancesQuery:u,getAllInstanceTagsQuery:l}=h(),{data:i}=l(),c=(i==null?void 0:i.data.results.map(s=>({label:s,value:s})))??[],{mutateAsync:d}=u,t=f({initialValues:_,onSubmit:async({tags:s})=>{try{await d({query:e.map(({id:a})=>`id:${a}`).join(" OR "),tags:s}),m(),r.success({title:"Tags assigned",message:`Tags successfully assigned to ${e.length>1?`${e.length} instances`:`"${e[0].title}" instance`}`})}catch(a){o(a)}},validationSchema:D});return n.jsxs(F.Form,{onSubmit:t.handleSubmit,noValidate:!0,children:[n.jsx(I,{variant:"condensed",label:"Tags",required:!0,items:c,selectedItems:t.values.tags.map(s=>({label:s,value:s})),onItemsUpdate:s=>{t.setFieldValue("tags",s.map(({value:a})=>a))},...t.getFieldProps("tags"),error:x(t,"tags")}),n.jsx(y,{submitButtonDisabled:t.isSubmitting,submitButtonText:"Assign"})]})};export{P as default};
