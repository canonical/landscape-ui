import{h as m,k as n,p as f,q as P,f as h,s as b,j as a,g as o,m as i}from"./index-czR6w9lm.js";import{S as g}from"./SidePanelFormButtons-CfWEYvbx.js";import{u as _}from"./EditUserForm-FqoZu0NC.js";import"./SidePanelFormButtons.module-tJTvEwdD.js";import"./formikErrors-M28fKKOX.js";try{let r=typeof window<"u"?window:typeof global<"u"?global:typeof globalThis<"u"?globalThis:typeof self<"u"?self:{},t=new r.Error().stack;t&&(r._sentryDebugIds=r._sentryDebugIds||{},r._sentryDebugIds[t]="a5166a76-b8cb-44c8-9f52-c673f74d512e",r._sentryDebugIdIdentifier="sentry-dbid-a5166a76-b8cb-44c8-9f52-c673f74d512e")}catch{}const y="_passwordConstraint_icf3u_1",x="_passed_icf3u_7",S="_failed_icf3u_13",d={passwordConstraint:y,passed:x,default:"_default_icf3u_10",failed:S},C=m().shape({currentPassword:n().required("This field is required"),newPassword:n().required("This field is required").min(8,"Password must be at least 8 characters long").max(50,"Password must be at most 50 characters long").matches(/[a-z]/,"Password must contain at least one lowercase letter").matches(/[A-Z]/,"Password must contain at least one uppercase letter").matches(/[0-9]/,"Password must contain at least one number")}),F=()=>{const r=f(),{notify:t}=P(),{closeSidePanel:u}=h(),{changePassword:c}=_(),{mutateAsync:l}=c,s=b({initialValues:{currentPassword:"",newPassword:""},validationSchema:C,onSubmit:async e=>{try{await l({password:e.currentPassword,new_password:e.newPassword}),u(),t.success({message:"Password changed successfully"})}catch(p){r(p)}}}),w=[{label:"8-50 characters",passed:s.values.newPassword.length>=8&&s.values.newPassword.length<=50},{label:"Lower case letters (a-z)",passed:/[a-z]/.test(s.values.newPassword)},{label:"Upper case letters (A-Z)",passed:/[A-Z]/.test(s.values.newPassword)},{label:"Numbers (0-9)",passed:/[0-9]/.test(s.values.newPassword)}];return a.jsxs(o.Form,{noValidate:!0,onSubmit:s.handleSubmit,children:[a.jsx(o.Input,{label:"Current password",type:"password",required:!0,autoComplete:"current-password",error:s.touched.currentPassword&&s.errors.currentPassword?s.errors.currentPassword:void 0,...s.getFieldProps("currentPassword")}),a.jsx(o.PasswordToggle,{required:!0,id:"new-password",label:"New password",autoComplete:"new-password","data-testid":"new-password",error:s.touched.newPassword&&s.errors.newPassword&&s.errors.newPassword==="This field is required"?s.errors.newPassword:void 0,...s.getFieldProps("newPassword")}),a.jsxs(a.Fragment,{children:[a.jsx("span",{className:i("u-text--muted"),children:"Password must contain"}),w.map(e=>a.jsxs("span",{className:i(d.passwordConstraint,{[d.passed]:e.passed,[d.default]:!e.passed&&!s.touched.newPassword,[d.failed]:!e.passed&&s.errors.newPassword&&s.touched.newPassword}),children:[a.jsx(o.Icon,{name:e.passed?"success":s.errors.newPassword&&s.touched.newPassword?"error":"information"}),e.label]},e.label))]}),a.jsx(g,{submitButtonDisabled:s.isSubmitting,submitButtonText:"Save changes"})]})};export{F as default};
