import{h as q,t as L,i as N,G as j,k as a,p as A,f as C,q as E,s as O,j as s,g as r}from"./index-czR6w9lm.js";import{A as D}from"./AssociationBlock-DZ32q9qo.js";import{S as W}from"./SidePanelFormButtons-CfWEYvbx.js";import{u as k}from"./useRoles-DBOAY-4X.js";import{M as B,R as U,C as V,F as $}from"./constants-C-_wCh-0.js";import{F as v}from"./FileInput-DVLSCSp0.js";import{u as z}from"./WslInstancesHeader-D4BYILgV.js";import"./usePageParams-CTGLrWb_.js";import{u as M}from"./index-Yt2QAqf7.js";import{C as G}from"./CodeEditor-DL8qJdCQ.js";import"./MultiSelectField-DrxbUqFA.js";import"./useInstances-CS4GBVs7.js";import"./useFetchOld-CEj2k1CT.js";import"./SidePanelFormButtons.module-tJTvEwdD.js";import"./HeaderWithSearch-BwHeuIPk.js";import"./TableFilterChips-DvqzXX1K.js";import"./PageMain-0gnhxHMf.js";import"./NoData-lrj3YC8M.js";try{let e=typeof window<"u"?window:typeof global<"u"?global:typeof globalThis<"u"?globalThis:typeof self<"u"?self:{},i=new e.Error().stack;i&&(e._sentryDebugIds=e._sentryDebugIds||{},e._sentryDebugIds[i]="e6d2e051-7d37-4300-a254-ad95071f2720",e._sentryDebugIdIdentifier="sentry-dbid-e6d2e051-7d37-4300-a254-ad95071f2720")}catch{}const Q=()=>q().shape({title:a().required("This field is required"),access_group:a().required("This field is required"),description:a().required("This field is required"),instanceType:a().required("This field is required"),rootfsImage:a().when("instanceType",{is:"custom",then:e=>e.required("This field is required"),otherwise:e=>e.notRequired()}),customImageName:a().when("instanceType",{is:"custom",then:e=>e.required("This field is required").test("not-match-reserved-patterns","Instance name cannot match 'ubuntu', 'ubuntu-preview', or 'ubuntu-<dd>.<dd>'",i=>!U.some(n=>n.test(i.toLowerCase()))),otherwise:e=>e.notRequired()}),cloudInitType:a(),cloudInit:j().nullable().when("cloudInitType",{is:e=>e==="file"||e==="text",then:e=>e.required("This field is required").test("file-size","File size must be less than 1MB",i=>(typeof i=="string"&&(i=f(i)),i?i.size===void 0?!1:i.size<=B*1024*1024:!0)),otherwise:e=>e.notRequired()}),all_computers:N(),tags:L().of(a())}),X=e=>e.action==="add"?{title:"",access_group:"",description:"",instanceType:"",customImageName:"",rootfsImage:"",cloudInitType:"",cloudInit:null,all_computers:!1,tags:[]}:{title:`${e.profile.title} (copy)`,access_group:e.profile.access_group,all_computers:e.profile.all_computers,cloudInit:null,cloudInitType:"",description:e.profile.description,tags:e.profile.tags,customImageName:e.profile.image_source?e.profile.image_name:"",instanceType:e.profile.image_source?"custom":e.profile.image_name,rootfsImage:e.profile.image_source||""},f=e=>{const i=new Blob([e],{type:"application/x-yaml"});return new File([i],"myFile.yaml",{type:"application/x-yaml"})},H=e=>{if(e)return new Promise((i,n)=>{const c=new FileReader;c.readAsDataURL(e),c.onload=()=>i(c.result),c.onerror=u=>n(u)})},Z=async e=>{if(e===null)return;let i;typeof e=="string"?i=f(e):i=e;const n=await H(i);return n?n.split(",")[1]:void 0},J="_block_zzdrk_1",K={block:J},p={add:{notificationAction:"added",ariaLabel:"Add a new WSL profile",buttonLabel:"Add WSL profile"},duplicate:{notificationAction:"duplicated",ariaLabel:"Duplicate WSL profile",buttonLabel:"Duplicate"}},ye=e=>{const i=A(),{closeSidePanel:n}=C(),{notify:c}=E(),{getAccessGroupQuery:u}=k(),{getWslInstanceNamesQuery:g}=z(),{createWslProfileQuery:I}=M(),{mutateAsync:b}=I,{data:d}=u(),{data:m,isLoading:y}=g(),h=((m==null?void 0:m.data)??[]).map(({label:o,name:l})=>({label:o,value:l}))||[],T=[{label:"Select",value:""},...h,{label:"From URL",value:"custom"}],_=(d==null?void 0:d.data.map(({name:o,title:l})=>({label:l,value:o})))??[],F=[{label:"Select access group",value:""},..._],S=async o=>{try{const l=await Z(t.values.cloudInit),P=(await b({title:o.title,access_group:o.access_group,description:o.description,image_name:o.instanceType==="custom"?o.customImageName:o.instanceType,image_source:o.rootfsImage,cloud_init_contents:l,all_computers:o.all_computers,tags:o.tags})).data.computers.constrained.length;n();const R=e.action==="add"?o.title:e.profile.title;c.success({title:`Profile "${R}" ${p[e.action].notificationAction} successfully`,message:`It has been associated with ${P} instances`})}catch(l){i(l)}},t=O({initialValues:X(e),onSubmit:S,validationSchema:Q()}),x=async o=>{await t.setFieldValue("cloudInit",o[0])},w=async()=>{await t.setFieldValue("cloudInit",null)};return s.jsxs(r.Form,{onSubmit:t.handleSubmit,noValidate:!0,children:[s.jsx(r.Input,{type:"text",label:"Name",required:!0,...t.getFieldProps("title"),error:t.touched.title&&t.errors.title?t.errors.title:void 0}),s.jsx(r.Input,{type:"text",label:"Description",required:!0,...t.getFieldProps("description"),error:t.touched.description&&t.errors.description?t.errors.description:void 0}),s.jsx(r.Select,{label:"Access group","aria-label":"Access group",required:!0,options:F,...t.getFieldProps("access_group"),error:t.touched.access_group&&t.errors.access_group?t.errors.access_group:void 0}),s.jsxs("div",{className:K.block,children:[(t.values.instanceType!==""||t.values.cloudInitType!=="")&&s.jsx(r.Notification,{severity:"caution",title:"Warning",children:s.jsx("span",{children:"Once the profile is added, you cannot modify the RootFS image or Cloud-init file."})}),s.jsx(r.Select,{label:"RootFS image",disabled:y,"aria-label":"RootFS image",options:T,required:!0,...t.getFieldProps("instanceType"),error:t.touched.instanceType&&t.errors.instanceType?t.errors.instanceType:void 0}),t.values.instanceType==="custom"&&s.jsxs(s.Fragment,{children:[s.jsx(r.Input,{label:"Image name",type:"text",...t.getFieldProps("customImageName"),error:t.touched.customImageName&&t.errors.customImageName?t.errors.customImageName:void 0}),s.jsx(r.Input,{type:"text",label:"RootFS image URL",...t.getFieldProps("rootfsImage"),error:t.touched.rootfsImage&&t.errors.rootfsImage?t.errors.rootfsImage:void 0,help:"The file path must be reachable by the affected WSL instances"})]}),s.jsx(r.Select,{label:"Cloud-init","aria-label":"Cloud-init",options:V,...t.getFieldProps("cloudInitType"),error:t.touched.cloudInitType&&t.errors.cloudInitType?t.errors.cloudInitType:void 0}),t.values.cloudInitType==="file"&&s.jsx(v,{label:"Upload cloud-init",labelClassName:"u-off-screen",accept:".yaml",...t.getFieldProps("cloudInit"),onFileRemove:w,onFileUpload:x,help:$,error:t.touched.cloudInit&&t.errors.cloudInit?t.errors.cloudInit:void 0}),t.values.cloudInitType==="text"&&s.jsx(G,{label:"Cloud init configuration",onChange:o=>{t.setFieldValue("cloudInit",o??"")},value:t.values.cloudInit??"",language:"yaml",defaultValue:"# paste cloud-init config here",error:t.touched.cloudInit&&t.errors.cloudInit?t.errors.cloudInit:void 0})]}),s.jsx(D,{formik:t}),s.jsx(W,{submitButtonText:p[e.action].buttonLabel,submitButtonAriaLabel:p[e.action].ariaLabel,submitButtonDisabled:t.isSubmitting})]})};export{ye as default};
