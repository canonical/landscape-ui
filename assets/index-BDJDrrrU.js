import{j as l,n as b,m as x,I as f,N as t,K as E,E as R}from"./index-UpX-dzun.js";const y="_wrapper_xvvb2_1",I="_blockTitle_xvvb2_13",h="_infoRows_xvvb2_20",a="_infoRow_xvvb2_20",m={wrapper:y,blockTitle:I,infoRows:h,infoRow:a},e=({infoRowLabel:s,infoBlocksArray:n})=>l.jsxs("div",{className:b("p-strip u-no-padding--bottom u-no-padding--top u-no-max-width",m.wrapper),children:[l.jsx("h3",{className:b("p-heading--4",m.blockTitle),children:s}),l.jsx("div",{className:m.infoRows,children:n.map((o,i)=>l.jsx("div",{className:b("p-strip u-no-max-width",m.infoRow),children:l.jsx(x.Row,{className:"u-no-padding--left u-no-padding--right u-no-max-width",children:o.map(({label:c,value:v},j)=>l.jsx(x.Col,{size:3,children:l.jsx(f,{label:c,value:v})},j))})},i))})]}),N=s=>[[{label:"MODEL",value:(s==null?void 0:s.system.model)||l.jsx(t,{})},{label:"VENDOR",value:(s==null?void 0:s.system.vendor)||l.jsx(t,{})},{label:"BIOS VENDOR",value:(s==null?void 0:s.system.bios_vendor)||l.jsx(t,{})},{label:"BIOS DATE",value:(s==null?void 0:s.system.bios_date)||l.jsx(t,{})},{label:"SERIAL NUMBER",value:(s==null?void 0:s.system.serial)||l.jsx(t,{})},{label:"CHASSIS",value:(s==null?void 0:s.system.chassis)||l.jsx(t,{})},{label:"BIOS VERSION",value:(s==null?void 0:s.system.bios_version)||l.jsx(t,{})}]],O=s=>[[{label:"SIZE",value:(s==null?void 0:s.memory.size)||l.jsx(t,{})}]],D=s=>s!=null&&s.network?typeof s.network=="string"?[[{label:"Network",value:s.network}]]:s.network.map(n=>[{label:"IP",value:n.ip||l.jsx(t,{})},{label:"VENDOR",value:n.vendor||l.jsx(t,{})},{label:"MODEL",value:n.product||l.jsx(t,{})},{label:"MAC ADDRESS",value:n.mac||l.jsx(t,{})},{label:"DESCRIPTION",value:n.description||l.jsx(t,{})}]):[[{label:"Network",value:l.jsx(t,{})}]],S=s=>s!=null&&s.cpu?s.cpu.map(n=>{const o=[{label:"VENDOR",value:n.vendor||l.jsx(t,{})},{label:"CLOCK SPEED",value:n.clock_speed||l.jsx(t,{})},{label:"MODEL",value:n.model||l.jsx(t,{})},{label:"ARCHITECTURE",value:n.architecture||l.jsx(t,{})}];return Object.keys(n.cache).length>0?o.push(...Object.entries(n.cache).map(([i,c])=>({label:i,value:c}))):o.push({label:"CACHE",value:"Not available"}),o}):[[{label:"VENDOR",value:l.jsx(t,{})},{label:"CLOCK SPEED",value:l.jsx(t,{})},{label:"MODEL",value:l.jsx(t,{})},{label:"ARCHITECTURE",value:l.jsx(t,{})}]],k=s=>[[{label:"MODEL",value:(s==null?void 0:s.multimedia.model)||l.jsx(t,{})},{label:"VENDOR",value:(s==null?void 0:s.multimedia.vendor)||l.jsx(t,{})}]],_=s=>({memory:O(s),multimedia:k(s),network:D(s),processor:S(s),system:N(s)}),C=({instance:s})=>{const n=s==null?void 0:s.grouped_hardware,{childInstanceId:o}=E();if(o)return l.jsx(R,{title:"Information not available",icon:"connected",body:l.jsx(l.Fragment,{children:l.jsx("p",{className:"u-no-margin--bottom",children:"Hardware information is not available for WSL instances."})})});const i=_(n);return l.jsxs(l.Fragment,{children:[l.jsx(e,{infoRowLabel:"System",infoBlocksArray:i.system}),l.jsx(e,{infoRowLabel:"Processor",infoBlocksArray:i.processor}),l.jsx(e,{infoRowLabel:"Memory",infoBlocksArray:i.memory}),l.jsx(e,{infoRowLabel:"Network",infoBlocksArray:i.network}),l.jsx(e,{infoRowLabel:"Multimedia",infoBlocksArray:i.multimedia})]})};export{C as default};
