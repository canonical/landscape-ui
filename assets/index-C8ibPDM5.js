import{c as x,l as R,d as F,j as t,e as u}from"./index-USfFY6y3.js";import{u as j}from"./formik.esm-C4aerYG-.js";import{u as C}from"./useRoles-NASJ59Wm.js";import{g as V,a as _,b as I,c as Q}from"./index-C8wzAqix.js";import{P as f,A as O}from"./AccessGroupBlock-w7Qa7r2x.js";import{S as $}from"./SidePanelFormButtons-eq1cIORy.js";import{c as w,b as y,a as c}from"./index.esm-D9RDGm6v.js";import"./useFetchOld-B0QImQ4i.js";import"./useMutation-DY_6kw1u.js";import"./useQuery-BXclWMSX.js";import"./PageMain-BxDaTx_L.js";import"./EmptyState-C3F4hI0m.js";import"./TruncatedCell-Bvd7ix8v.js";import"./useConfirm-CBkoo4y2.js";import"./useOnClickOutside-CiLzDwfe.js";import"./SidePanelFormButtons.module-CoxOjuX8.js";const B={access_groups:[],description:"",name:"",permissions:[]},N=w().shape({access_groups:y().of(c()),description:c(),name:c().required("This field is required.").matches(/^[a-zA-Z][-+a-zA-Z0-9]*$/,"Name must start with a letter and can contain alphanumeric characters, ‘-‘ and ‘+’."),permissions:y().of(c())}),k=(o,i)=>({accessGroupsToAdd:V(o.access_groups,i),permissionsToAdd:o.permissions.includes("AddComputerToAccessGroup")?[...o.permissions,"RemoveComputerFromAccessGroup"]:o.permissions}),D=(o,i,m)=>{const{addAccessGroups:p,addPermissions:d}=m,r=[],{accessGroupsToAdd:n,permissionsToAdd:a}=k(o,i);return n.length>0&&r.push(p({name:o.name,access_groups:n})),a.length>0&&r.push(d({name:o.name,permissions:a})),r},E=()=>{const o=x(),{notify:i}=R(),{closeSidePanel:m}=F(),{createRoleQuery:p,addPermissionsToRoleQuery:d,addAccessGroupsToRoleQuery:r,getAccessGroupQuery:n,getPermissionsQuery:a}=C(),{data:l}=a(),g=l?_(l.data):[],{data:A}=n(),h=A?I(Q(A.data)):[],{mutateAsync:b}=p,{mutateAsync:P}=d,{mutateAsync:T}=r,s=j({initialValues:B,validationSchema:N,onSubmit:async e=>{await b({description:e.description,name:e.name});const G=D(e,h,{addAccessGroups:T,addPermissions:P});try{await Promise.all(G),m(),i.success({title:"New role has been added",message:`You added the role '${e.name}'`})}catch(S){o(S)}}});return t.jsxs(u.Form,{onSubmit:s.handleSubmit,noValidate:!0,children:[t.jsx(u.Input,{type:"text",label:"Role name",required:!0,autoComplete:"off",...s.getFieldProps("name"),error:s.touched.name&&s.errors.name?s.errors.name:void 0}),t.jsx(u.Input,{type:"text",label:"Description",autoComplete:"off",...s.getFieldProps("description"),error:s.touched.description&&s.errors.description?s.errors.description:void 0}),t.jsx(f,{description:"These permissions are for managing the account as a whole. They are not limited to the specified access groups, but instead apply globally.",onPermissionChange:e=>s.setFieldValue("permissions",e),options:g.filter(({global:e})=>e),permissions:s.values.permissions,title:"Global permissions"}),t.jsx(f,{description:"These permissions only apply to selected access groups.",onPermissionChange:e=>s.setFieldValue("permissions",e),options:g.filter(({global:e})=>!e),permissions:s.values.permissions,title:"Permissions"}),t.jsx(O,{accessGroupOptions:h,accessGroups:s.values.access_groups,onAccessGroupChange:e=>{s.setFieldValue("access_groups",e)}}),t.jsx($,{submitButtonDisabled:s.isSubmitting,submitButtonText:"Add"})]})},is=E;export{is as default};
