import{f as K,g as A,h as r,i as c}from"./index-Y1sHRQPW.js";function S(){const s=K(),o=A(),u=(e={},n={})=>c({queryKey:["accessGroups"],queryFn:async({signal:G})=>s.get("GetAccessGroups",{params:e,signal:G}),...n}),a=r({mutationFn:async e=>s.get("CreateAccessGroup",{params:e}),onSuccess:async()=>o.invalidateQueries({queryKey:["accessGroups"]})}),t=r({mutationFn:async e=>s.get("RemoveAccessGroup",{params:e}),onSuccess:async()=>o.invalidateQueries({queryKey:["accessGroups"]})}),i=(e={},n={})=>c({queryKey:["roles"],queryFn:async()=>s.get("GetRoles",{params:e}),...n}),y=r({mutationFn:async e=>s.get("CreateRole",{params:e}),onSuccess:async()=>o.invalidateQueries({queryKey:["roles"]})}),l=r({mutationFn:async e=>s.get("CopyRole",{params:e}),onSuccess:async()=>o.invalidateQueries({queryKey:["roles"]})}),m=r({mutationFn:async e=>s.get("RemoveRole",{params:e}),onSuccess:async()=>Promise.all([o.invalidateQueries({queryKey:["roles"]}),o.invalidateQueries({queryKey:["administrators"]})])}),Q=r({mutationFn:async e=>s.get("AddAccessGroupsToRole",{params:e}),onSuccess:async()=>o.invalidateQueries({queryKey:["roles"]})}),d=r({mutationFn:async e=>s.get("RemoveAccessGroupsFromRole",{params:e}),onSuccess:async()=>o.invalidateQueries({queryKey:["roles"]})}),R=(e={},n={})=>c({queryKey:["permissions"],queryFn:async()=>s.get("GetPermissions",{params:e}),...n}),p=r({mutationFn:async e=>s.get("AddPermissionsToRole",{params:e}),onSuccess:async()=>o.invalidateQueries({queryKey:["roles"]})}),v=r({mutationFn:async e=>s.get("RemovePermissionsFromRole",{params:e}),onSuccess:async()=>o.invalidateQueries({queryKey:["roles"]})}),F=r({mutationFn:async e=>s.get("AddPersonsToRole",{params:e}),onSuccess:async()=>Promise.all([o.invalidateQueries({queryKey:["roles"]}),o.invalidateQueries({queryKey:["administrators"]})])}),q=r({mutationFn:async e=>s.get("RemovePersonsFromRole",{params:e}),onSuccess:async()=>Promise.all([o.invalidateQueries({queryKey:["roles"]}),o.invalidateQueries({queryKey:["administrators"]})])}),g=r({mutationFn:async e=>s.get("ChangeComputersAccessGroup",{params:e}),onSuccess:async()=>o.invalidateQueries({queryKey:["instances"]})});return{getAccessGroupQuery:u,createAccessGroupQuery:a,removeAccessGroupQuery:t,getRolesQuery:i,createRoleQuery:y,copyRoleQuery:l,removeRoleQuery:m,addAccessGroupsToRoleQuery:Q,removeAccessGroupsFromRoleQuery:d,getPermissionsQuery:R,addPermissionsToRoleQuery:p,removePermissionsFromRoleQuery:v,addPersonsToRoleQuery:F,removePersonsFromRoleQuery:q,changeComputersAccessGroupQuery:g}}export{S as u};
