import{O as k,z as _,B as q,y as T,C as A,H as B,W as C,o as t,X as M,j as s,d as a,F as n}from"./index-6fwIJGGG.js";import{S as Q}from"./SidePanelFormButtons-BJEvhYDN.js";import{M as D}from"./MultiSelectField-BHsPThic.js";import{u as E}from"./index-CUB5rloa.js";import"./SidePanelFormButtons.module-CcPyiogC.js";import"./helpers-CRoicUtZ.js";import"./HeaderWithSearch-Bys-4NSP.js";import"./constants-BePvSiFl.js";const J=({user:i})=>{const{instanceId:g}=k(),h=_(),{notify:b}=q(),{closeSidePanel:w}=T(),{editUserQuery:y,getGroupsQuery:P,getUserGroupsQuery:f,addUserToGroupQuery:G,removeUserFromGroupQuery:x}=E(),m=Number(g),{data:F,isLoading:S}=P({computer_id:m}),{data:V}=f({username:i.username,computer_id:m}),{mutateAsync:N}=y,{mutateAsync:j}=G,{mutateAsync:I}=x,l=F?.data.groups??[],d=l.map(e=>({label:e.name,value:String(e.gid)})),p=V?.data.groups.map(e=>String(e.gid))||[],r=A({initialValues:{name:i.name??"",username:i.username,password:"",confirmPassword:"",location:i.location??"",homePhoneNumber:i.home_phone??"",workPhoneNumber:i.work_phone??"",primaryGroupValue:String(i.primary_gid),additionalGroupValue:p},validationSchema:B().shape({username:t().required("This field is required"),name:t(),password:t(),confirmPassword:t().when("password",([e],u)=>e&&e.length>0?u.trim().required("Confirm password is required").oneOf([M("password"),""],"Passwords must match"):u.notRequired()),location:t(),homePhoneNumber:t(),workPhoneNumber:t(),primaryGroupValue:t().required("This field is required"),additionalGroupValue:C().of(t())}),onSubmit:async e=>{const u=e.additionalGroupValue.filter(o=>!p.includes(o)),U=p.filter(o=>!e.additionalGroupValue.includes(o)),c=l.filter(o=>u.includes(String(o.gid))).map(o=>o.name);try{const o=[];u.length&&o.push(j({computer_id:m,groupnames:c,usernames:[e.username],action:"add"})),U.length&&o.push(I({computer_id:m,groupnames:c,usernames:[e.username],action:"remove"})),o.push(N({computer_ids:[m],name:e.name,username:e.username,password:e.password,location:e.location,home_phone:e.homePhoneNumber,work_phone:e.workPhoneNumber,primary_groupname:e.primaryGroupValue})),await Promise.all(o),w(),b.success({message:"User updated successfully"})}catch(o){h(o)}}});return s.jsxs(a.Form,{onSubmit:r.handleSubmit,noValidate:!0,name:"edit-user",children:[s.jsx(a.Input,{type:"text",label:"Username",required:!0,autoComplete:"new-username",error:n(r,"username"),...r.getFieldProps("username")}),s.jsx(a.Input,{type:"text",label:"Name",error:n(r,"name"),...r.getFieldProps("name")}),s.jsx(a.Input,{type:"password",label:"Password",autoComplete:"new-password",error:n(r,"password"),...r.getFieldProps("password")}),s.jsx(a.Input,{type:"password",label:"Confirm password",autoComplete:"new-password",error:n(r,"confirmPassword"),...r.getFieldProps("confirmPassword")}),s.jsx(a.Select,{"data-testid":"primaryGroupValue",label:"Primary Group",required:!0,disabled:S,options:d,...r.getFieldProps("primaryGroupValue"),error:n(r,"primaryGroupValue")}),s.jsx(D,{variant:"condensed",placeholder:"Select groups",label:"Additional Groups",items:d,selectedItems:d.filter(({value:e})=>r.values.additionalGroupValue.includes(e)),onItemsUpdate:e=>{r.setFieldValue("additionalGroupValue",e.map(({value:u})=>u))},error:n(r,"additionalGroupValue")}),s.jsx(a.Input,{type:"text",label:"Location",error:n(r,"location"),...r.getFieldProps("location")}),s.jsx(a.Input,{type:"text",label:"Home phone",error:n(r,"homePhoneNumber"),...r.getFieldProps("homePhoneNumber")}),s.jsx(a.Input,{type:"text",label:"Work phone",error:n(r,"workPhoneNumber"),...r.getFieldProps("workPhoneNumber")}),s.jsx(Q,{submitButtonDisabled:r.isSubmitting,submitButtonText:"Save changes"})]})};export{J as default};
