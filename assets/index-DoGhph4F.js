import{i as R,h as k,e as I,f as q,g as N,B as b,K as B,F as h,a8 as m,r as S,l as L,y as V,z as $,J as D,j as s,m as c,L as v,o as M,N as O}from"./index-BEUDjxZw.js";import{C as K}from"./CodeEditor-BU9FYl3O.js";import{S as H}from"./SidePanelFormButtons-LYWL_FM4.js";import{g as x}from"./formikErrors-Bw8iTXYS.js";import{u as Q}from"./useEditScript-ClEjN0sG.js";import{u as Y,D as z,S as G}from"./ScriptFormAttachments-CryHLutq.js";import{g as J,e as U}from"./ScriptsTabs-CS6vFrDE.js";import"./index-Bf_KPBmd.js";import"./SidePanelFormButtons.module-D2P5PizG.js";import"./AttachmentFile-YOAs_HIs.js";import"./TruncatedCell-11w6KeP-.js";import"./useRoles-KGB_ry2J.js";import"./HeaderWithSearch-CR9J-Bz3.js";import"./SingleInstanceTabs.module-Cm1BYFZQ.js";const W=(t,r={enabled:!0})=>{const l=R(),{data:o,isPending:u}=k({queryKey:["scripts","profiles",t],queryFn:async()=>l.get(`scripts/${t}/script-profiles`),...r});return{associatedScriptProfiles:(o==null?void 0:o.data.results)??[],isAssociatedScriptProfilesLoading:u}},X=()=>{const t=I(),r=q(),{mutateAsync:l,isPending:o}=N({mutationKey:["scripts","removeAttachment"],mutationFn:async u=>t.get("RemoveScriptAttachment",{params:u}),onSuccess:async()=>r.invalidateQueries({queryKey:["scripts"]})});return{removeScriptAttachment:l,isRemovingScriptAttachment:o}},Z="_modal_ud99a_1",tt="_link_ud99a_5",p={modal:Z,link:tt},et=()=>b().shape({title:h().required("This field is required"),code:h().required("This field is required"),attachments:b().shape({first:m().nullable(),second:m().nullable(),third:m().nullable(),fourth:m().nullable(),fifth:m().nullable()}),attachmentsToRemove:B().of(h())}),st=t=>({title:t.title,code:`#!${t.interpreter}
`+t.code,time_limit:t.time_limit,username:t.username,attachments:{first:null,second:null,third:null,fourth:null,fifth:null},attachmentsToRemove:[]}),at=t=>{const r=t.lastIndexOf(".");return r!==-1?t.slice(0,r):t},St=({script:t})=>{const r=S.useRef(null),[l,o]=S.useState(!1),{closeSidePanel:u}=L(),y=V(),{notify:A}=$(),{createScriptAttachment:F}=Y(),{removeScriptAttachment:j}=X(),{editScript:C,isEditing:f}=Q(),{associatedScriptProfiles:g,isAssociatedScriptProfilesLoading:w}=W(t.id,{enabled:l}),T=async e=>{const n=Object.values(e.attachments).filter(i=>i!==null);try{const i=[C(J({scriptId:t.id,values:e}))];if(e.attachmentsToRemove.length)for(const d of e.attachmentsToRemove)i.push(j({script_id:t.id,filename:d}));n.length&&i.push(...await U({attachments:n,createScriptAttachment:F,script_id:t.id})),await Promise.all(i),u(),o(!1),A.success({title:`You have successfully submitted a new version of ${t.title}`,message:"All its associated profiles will now be run using this new version."})}catch(i){o(!1),y(i)}},a=D({initialValues:st(t),validationSchema:et(),onSubmit:T}),P=async({target:{files:e}})=>{if(!e)return;const[n]=e,i=a.setFieldValue("code",await n.text());if(a.values.title){await i;return}await Promise.all([a.setFieldValue("title",at(n.name)),i])},_=async e=>{await a.setFieldValue("code",e)},E=()=>{var e;return(e=r.current)==null?void 0:e.click()};return s.jsxs(c.Form,{onSubmit:a.handleSubmit,noValidate:!0,children:[s.jsx(c.Input,{type:"text",label:"Title",required:!0,...a.getFieldProps("title"),error:a.touched.title&&a.errors.title?a.errors.title:void 0}),s.jsx("input",{ref:r,className:"u-hide",type:"file",onChange:P}),s.jsx(K,{label:"Code",value:a.values.code,onChange:_,error:x(a,"code"),required:!0,defaultValue:z,headerContent:s.jsxs(c.Button,{className:"u-no-margin--bottom",appearance:"base",hasIcon:!0,onClick:E,type:"button",children:[s.jsx(c.Icon,{name:"upload"}),s.jsx("span",{children:"Populate from file"})]})}),s.jsxs(s.Fragment,{children:[s.jsx("h5",{children:"List of attachments"}),s.jsx("p",{className:"u-text--muted",children:"Attachments that will be sent along with the script. You can attach up to 5 files, for a maximum of 1.00MB. Filenames must be unique. On the client, the attachments will be placed in the directory whose name is accessible through the environment variable LANDSCAPE_ATTACHMENTS. They'll be deleted once the script has been run."})]}),s.jsx(G,{attachments:a.values.attachments,attachmentsToRemove:a.values.attachmentsToRemove,getFileInputError:e=>x(a,["attachments",e]),initialAttachments:t.attachments,onFileInputChange:e=>async n=>{var i;return a.setFieldValue(`attachments.${e}`,((i=n.target.files)==null?void 0:i[0])??null)},onInitialAttachmentDelete:async e=>a.setFieldValue("attachmentsToRemove",[...a.values.attachmentsToRemove,e]),scriptId:t.id}),s.jsx(H,{onSubmit:()=>{o(!0)},submitButtonText:"Submit new version"}),l&&s.jsxs(c.ConfirmationModal,{title:`Submit new version of "${t.title}"`,confirmButtonLabel:"Submit new version",onConfirm:()=>{a.handleSubmit()},confirmButtonAppearance:"positive",confirmButtonDisabled:f,confirmButtonLoading:f,close:()=>{o(!1)},className:p.modal,confirmButtonProps:{type:"button"},children:[s.jsx("p",{children:"All future script runs will be done using the latest version of the code. Submitting these changes will affect the following profiles:"}),g.length>0&&s.jsx(c.ModularTable,{columns:[{Header:"active profiles",accessor:"title",Cell:({row:e})=>s.jsx(v,{to:"/scripts?tab=profiles",state:{scriptProfileId:e.original.id},target:"_blank",className:p.link,children:e.original.title})},{Header:"associated instances",Cell:({row:e})=>{const n=g.find(d=>d.id===e.original.id),i=n==null?void 0:n.computers.num_associated_computers;return w?s.jsx(M,{}):i?s.jsxs(v,{to:`/instances?tags=${n==null?void 0:n.tags.join(",")}`,target:"_blank",className:p.link,children:[i," instances"]}):s.jsx(O,{})}}],data:t.script_profiles})]})]})};export{St as default};
