import{j as t,m as _,h as G,t as y,i as q,k as l,p as O,f as A,s as R,g as n}from"./index-BWDSuVdc.js";import{C as S,U as V}from"./UdebCheckboxInput-BzM5CiqA.js";import{a as U,u as M,F as D}from"./debug-C_8V6Ezp.js";import{M as L}from"./MultiSelectField-BgIVnwCP.js";import{S as $}from"./SidePanelFormButtons-C7maNMEA.js";import{g as a}from"./formikErrors-BhPg4HXw.js";import{e as T,P as I,g as C,M as w,f as K,C as B,A as z}from"./constants-BiU2XIF5.js";import{t as E}from"./tests-q88Rdak8.js";import"./useGPGKeys-pS8QmSwL.js";import"./useFetchOld-BrEW1db4.js";import"./SidePanelFormButtons.module-tJTvEwdD.js";import"./usePageParams-Bts0F2BK.js";import"./NoData-B3Q3EXVi.js";import"./index-Dth2zyxz.js";import"./TablePagination-B-je2IEH.js";import"./TablePaginationBase-BhH1Qvbp.js";import"./StatusFilter-BJ1mp4rK.js";import"./TableFilter-B1PCZQ69.js";import"./TableFilterChips-BuKzUo5Y.js";try{let r=typeof window<"u"?window:typeof global<"u"?global:typeof globalThis<"u"?globalThis:typeof self<"u"?self:{},s=new r.Error().stack;s&&(r._sentryDebugIds=r._sentryDebugIds||{},r._sentryDebugIds[s]="427f67b7-7199-44c4-8550-29fc2ff62b26",r._sentryDebugIdIdentifier="sentry-dbid-427f67b7-7199-44c4-8550-29fc2ff62b26")}catch{}const H=({groupedOptions:r,group:s,option:p,onChange:c,error:d,emptyOption:m,name:h,label:b="",id:k,onBlur:g,className:e,labelClassName:x,wrapperClassName:P,hidden:F,disabled:i,required:o})=>{const f=k??h.replace(/[_\s]/g,"-").replace(/([a-z])(?=[A-Z])/,"$1-").replace(/([A-Z])(?=[a-z])/,"-$1").toLowerCase();return t.jsxs("div",{className:_("p-form-validation",P,{"is-error":!!d}),children:[b&&t.jsx("label",{className:_("p-form__label",x,{"is-required":o}),htmlFor:f,children:b}),t.jsxs("div",{className:"p-form__control u-clearfix",children:[t.jsx("div",{className:"p-form-validation__select-wrapper",children:t.jsxs("select",{id:f,value:p===""?"":`${s}/${p}`,name:h,className:_("p-form-validation__input",e),onChange:u=>{c(u.target[u.target.selectedIndex].dataset.value??"",u.target[u.target.selectedIndex].dataset.group??"")},onBlur:g,disabled:i,hidden:F,"aria-invalid":!!d,"aria-errormessage":d?"pull-pocket-validation-message":void 0,children:[m&&m.enabled&&t.jsx("option",{value:"","data-group":"","data-value":"",children:m.label??""}),r.map(({optGroup:u,options:N})=>t.jsx("optgroup",{label:u,children:N.map(({value:j,label:v})=>t.jsx("option",{value:`${u}/${j}`,"data-group":u,"data-value":j,children:v},j))},u))]})}),!!d&&t.jsxs("p",{className:"p-form-validation__message",id:"pull-pocket-validation-message",children:[t.jsx("strong",{children:"Error:"})," ",d]})]})]})},Q=[{label:"Mirror",value:"mirror"},{label:"Pull",value:"pull"},{label:"Upload",value:"upload"}],Z={type:"ubuntu",series:"",distribution:"",name:"",architectures:C.ubuntu,components:I.ubuntu,gpg_key:"",include_udeb:!1,filter_type:"",mode:"mirror",pull_pocket:"",pull_series:"",mirror_uri:T,upload_allow_unsigned:!1,mirror_suite:"",mirror_gpg_key:"",filter_packages:[],upload_gpg_keys:[]},W=[{label:"Select filter type",value:""},{label:"Allow list",value:"whitelist"},{label:"Disallow list",value:"blacklist"}],J=r=>{switch(r.mode){case"mirror":return{mode:r.mode,distribution:r.distribution,series:r.series,name:r.name,architectures:r.architectures,components:r.components,gpg_key:r.gpg_key,include_udeb:r.include_udeb,mirror_uri:r.mirror_uri,mirror_suite:r.mirror_suite,mirror_gpg_key:r.mirror_gpg_key};case"upload":return{mode:r.mode,distribution:r.distribution,series:r.series,name:r.name,architectures:r.architectures,components:r.components,gpg_key:r.gpg_key,include_udeb:r.include_udeb,upload_allow_unsigned:r.upload_allow_unsigned};case"pull":return{mode:r.mode,distribution:r.distribution,series:r.series,name:r.name,architectures:r.architectures,components:r.components,gpg_key:r.gpg_key,include_udeb:r.include_udeb,pull_series:r.pull_series,pull_pocket:r.pull_pocket,filter_type:r.filter_type!==""?r.filter_type:void 0,filter_packages:r.filter_packages};default:return U(r.mode,"pocket mode")}},X=r=>G().shape({type:l().required("This field is required."),name:l().required("This field is required").test({test:E.test,message:E.message}).test({params:{series:r},test:s=>!r.pockets.map(({name:p})=>p).includes(s),message:"It must be unique within series."}),distribution:l().required("This field is required"),series:l().required("This field is required"),components:y().defined().of(l().defined()).min(w,"Please choose at least one component").test({name:"flat-mirror-sub-directory",message:"A single component must be passed",test:(s,p)=>{const{mode:c,mirror_suite:d}=p.parent;return c==="mirror"&&(d!=null&&d.endsWith("/"))?w===s.length:!0}}).required("This field is required"),architectures:y().defined().of(l().defined()).min(w,"Please choose at least one architecture"),mode:l().required("This field is required"),gpg_key:l().required("This field is required"),include_udeb:q().required("This field is required"),mirror_uri:l().when("mode",{is:"mirror",then:s=>s.required("This field is required")}),mirror_suite:l(),mirror_gpg_key:l(),pull_pocket:l().when("mode",{is:"pull",then:s=>s.required("This field is required")}),pull_series:l(),filter_type:l(),filter_packages:y().of(l().defined()),upload_allow_unsigned:q(),upload_gpg_keys:y().of(l().defined())}),Y=(r,s)=>({...Z,distribution:r,series:s}),ye=({distribution:r,series:s})=>{const p=O(),{closeSidePanel:c}=A(),{createPocketQuery:d,addUploaderGPGKeysToPocketQuery:m}=K(),{mutateAsync:h}=d,{mutateAsync:b}=m,{privateGPGKeysOptions:k,publicGPGKeysOptions:g}=M(),e=R({initialValues:Y(r.name,s.name),validationSchema:X(s),onSubmit:async i=>{try{await h(J(i)),i.mode==="upload"&&!i.upload_allow_unsigned&&i.upload_gpg_keys.length&&await b({name:i.name,series:i.series,distribution:i.distribution,gpg_keys:i.upload_gpg_keys}),c()}catch(o){p(o)}}}),x=i=>{const o=i.target.value,f=o==="ubuntu"?{type:o,components:I.ubuntu,architectures:C.ubuntu,mirror_uri:e.values.mode==="mirror"?T:""}:{type:o,components:I.thirdParty,architectures:C.thirdParty,mirror_uri:e.values.mode==="mirror"?"":void 0};e.setValues({...e.values,...f})},P=i=>{const o=i.target.value;o==="mirror"&&e.values.type==="ubuntu"?e.setFieldValue("mirror_uri",T):e.setFieldValue("mirror_uri",""),e.setFieldValue("mode",o)},F=r.series.map(i=>({options:i.pockets.map(({name:o})=>({label:o,value:o})),optGroup:i.name}));return t.jsxs(n.Form,{onSubmit:e.handleSubmit,noValidate:!0,children:[t.jsx(n.Select,{label:"Type",required:!0,options:[{label:"Ubuntu",value:"ubuntu"},{label:"Third party",value:"third-party"}],...e.getFieldProps("type"),onChange:x,error:a(e,"type")}),t.jsx(n.Select,{label:"Mode",required:!0,options:Q,...e.getFieldProps("mode"),onChange:P,error:a(e,"mode")}),e.values.mode==="mirror"&&t.jsx(n.Input,{type:"text",label:"Mirror URI",required:!0,...e.getFieldProps("mirror_uri"),error:a(e,"mirror_uri")}),t.jsxs("div",{className:_({row:e.values.mode==="pull","u-no-padding--left":e.values.mode==="pull","u-no-padding--right":e.values.mode==="pull"}),children:[t.jsx(n.Input,{type:"text",label:"Name",required:!0,wrapperClassName:_({"col-6":e.values.mode==="pull"}),style:{display:"block !important"},...e.getFieldProps("name"),error:a(e,"name")}),e.values.mode=="pull"&&t.jsx(H,{label:"Pull from",required:!0,name:"pull_pocket",wrapperClassName:"col-6",groupedOptions:F,option:e.values.pull_pocket,group:e.values.pull_series,emptyOption:{enabled:!0,label:"Select pull pocket"},onChange:async(i,o)=>{await e.setFieldValue("pull_pocket",i),await e.setFieldValue("pull_series",o)},onBlur:e.handleBlur,error:a(e,"pull_pocket")})]}),t.jsx(n.Select,{label:"GPG Key",required:!0,options:[{label:"Select GPG key",value:""},...k],...e.getFieldProps("gpg_key"),error:a(e,"gpg_key")}),e.values.mode==="mirror"&&t.jsxs(t.Fragment,{children:[t.jsx(n.Input,{type:"text",label:t.jsx(D,{label:"Mirror suite",description:t.jsxs(t.Fragment,{children:[t.jsx("span",{children:"The specific sub-directory under dists/ that should be mirrored. If the suite name ends with a ‘/’, the remote repository is flat (no dists/ structure, see "}),t.jsx("a",{href:"http://wiki.debian.org/RepositoryFormat#Flat_Repository_Format",target:"_blank",rel:"nofollow noopener noreferrer",children:"wiki.debian.org/RepositoryFormat#Flat_Repository_Format"}),t.jsx("span",{children:"); in this case a single value must be passed for the ‘components’ parameter. Packages from the remote repository will be mirrored in the specified component. This parameter is optional and defaults to the same name as local series and pocket."})]})}),...e.getFieldProps("mirror_suite"),error:a(e,"mirror_suite")}),t.jsx(n.Select,{label:"Mirror GPG key",options:[{label:"Select GPG key",value:""},...g],...e.getFieldProps("mirror_gpg_key"),error:a(e,"mirror_gpg_key"),help:"If none is given, the stock Ubuntu archive one will be used."})]}),e.values.mode==="pull"&&t.jsxs(t.Fragment,{children:[t.jsx(n.Select,{label:"Filter type",options:W,...e.getFieldProps("filter_type"),error:a(e,"filter_type")}),e.values.filter_type!==""&&t.jsx(n.Textarea,{label:"Filter packages",rows:3,help:"List packages to filter separated by commas",...e.getFieldProps("filter_packages"),onChange:i=>{e.setFieldValue("filter_packages",i.target.value.replace(/\s/g,"").split(","))},value:e.values.filter_packages.join(","),error:a(e,"filter_packages")})]}),e.values.mode==="upload"&&t.jsxs(t.Fragment,{children:[t.jsx(n.CheckboxInput,{label:"Allow uploaded packages to be unsigned",...e.getFieldProps("upload_allow_unsigned"),checked:e.values.upload_allow_unsigned}),t.jsx(L,{variant:"condensed",label:"Uploader GPG keys",disabled:e.values.upload_allow_unsigned,items:g,selectedItems:g.filter(({value:i})=>e.values.upload_gpg_keys.includes(i)),onItemsUpdate:i=>{e.setFieldValue("upload_gpg_keys",i.map(({value:o})=>o))},error:a(e,"upload_gpg_keys")})]}),e.values.type==="ubuntu"&&t.jsxs(t.Fragment,{children:[t.jsx(S,{label:"Components",required:!0,options:B,...e.getFieldProps("components"),onChange:i=>{e.setFieldValue("components",i)},error:a(e,"components")}),t.jsx(S,{label:"Architectures",required:!0,options:z,...e.getFieldProps("architectures"),onChange:i=>{e.setFieldValue("architectures",i)},error:a(e,"architectures")})]}),e.values.type==="third-party"&&t.jsxs(t.Fragment,{children:[t.jsx(n.Input,{type:"text",label:"Components",required:!0,...e.getFieldProps("components"),value:e.values.components.join(","),onChange:i=>{e.setFieldValue("components",i.target.value.replace(/\s/g,"").split(","))},error:a(e,"components")}),t.jsx(n.Input,{type:"text",label:"Architectures",required:!0,...e.getFieldProps("architectures"),value:e.values.architectures.join(","),onChange:i=>{e.setFieldValue("architectures",i.target.value.replace(/\s/g,"").split(","))},error:a(e,"architectures")})]}),t.jsx(V,{formik:e}),t.jsx($,{submitButtonDisabled:e.isSubmitting,submitButtonText:"Add pocket",submitButtonAriaLabel:"Add pocket"})]})};export{ye as default};
