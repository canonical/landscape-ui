import{p as l,f as S,h,k as x,s as b,j as s,g as m}from"./index-DdVy3CIu.js";import{S as g}from"./SidePanelFormButtons-CKYzlbXP.js";import{g as f}from"./formikErrors-Bw8iTXYS.js";import{t as o}from"./tests-DFnZqbNV.js";import{a as j}from"./constants-E3Le5af2.js";import"./SidePanelFormButtons.module-D2P5PizG.js";import"./useFetchOld-CHfQedZ7.js";import"./usePageParams-CcklzBaA.js";import"./NoData-Chqc7NTj.js";import"./index-DTjKue4r.js";import"./TablePagination-DcRP3nto.js";import"./TablePaginationBase-ZnL0qmAy.js";import"./StatusFilter-DAfk9Cb4.js";import"./TableFilter-CDgyuP9F.js";import"./TableFilterChips-3QiSvy-H.js";const v={name:""},$=({distribution:e,origin:a})=>{const n=l(),{closeSidePanel:u}=S(),{deriveSeriesQuery:p}=j(),{mutateAsync:c}=p,d=h().shape({name:x().required("This field is required").test({test:o.test,message:o.message}).test({params:{distribution:e},test:r=>!e.series.map(({name:i})=>i).includes(r),message:"It must be unique within the distribution."})}),t=b({validationSchema:d,initialValues:v,onSubmit:async r=>{try{await c({name:r.name,distribution:e.name,origin:a}),u()}catch(i){n(i)}}});return s.jsxs(m.Form,{onSubmit:t.handleSubmit,noValidate:!0,children:[s.jsx(m.Input,{type:"text",label:"Series name",required:!0,...t.getFieldProps("name"),error:f(t,"name")}),s.jsxs("p",{className:"u-text--muted",children:["You are deriving ",e.name,"/",a,"."]}),s.jsx(g,{submitButtonDisabled:t.isSubmitting,submitButtonText:"Derive series"})]})};export{$ as default};
