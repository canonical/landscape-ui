import{F as x,Q as S,k as u,x as g,y as h,w as I,z as F,j as i,i as d,B as p}from"./index-_GBNEgML.js";import{M as j}from"./MultiSelectField-D1pOmy7_.js";import{S as A}from"./SidePanelFormButtons-DYZse7eg.js";import{u as q}from"./index-BOTYi1al.js";import{u as R}from"./useRoles-Cu4V5ba4.js";import"./SidePanelFormButtons.module-CcPyiogC.js";import"./PageMain-Dp-fNxq8.js";import"./constants-CmAirV7h.js";import"./HeaderWithSearch-BMz1m6Kc.js";const P=s=>x().shape({email:u().required("This field is required.").email("Please provide a valid email address").test({name:"unique-email",params:{invitations:s},test:(r,{createError:o,parent:n})=>{const a=s.find(({email:l})=>l===r);return!a||o({message:`${n.name??a.name} is already invited to this account`})}}),name:u().required("This field is required."),roles:S().of(u())}),Q={email:"",name:"",roles:[]},D=()=>{const s=g(),{notify:r}=h(),{getInvitationsQuery:o,inviteAdministratorQuery:n}=q(),{getRolesQuery:a}=R(),{closeSidePanel:l}=I(),{data:f}=o(),{mutateAsync:v}=n,b=async e=>{try{await v(e),l(),r.success({title:"You sent an administrator invite",message:`${e.name} will receive an invitation email`})}catch(m){s(m)}},t=F({initialValues:Q,validationSchema:P(f?.data.results??[]),onSubmit:b}),{data:y}=a(),c=y?.data.map(({name:e})=>({label:e,value:e}))??[];return i.jsxs(d.Form,{onSubmit:t.handleSubmit,noValidate:!0,children:[i.jsx("p",{children:"An invitation, sent by email, contains a link a prospective administrator can use to join this account."}),i.jsx(d.Input,{type:"text",label:"Name",autoComplete:"off",required:!0,...t.getFieldProps("name"),error:p(t,"name")}),i.jsx(d.Input,{type:"email",label:"Email address",autoComplete:"off",required:!0,...t.getFieldProps("email"),error:p(t,"email")}),i.jsx(j,{variant:"condensed",label:"Roles",items:c,selectedItems:c.filter(({value:e})=>t.values.roles.includes(e)),onItemsUpdate:e=>t.setFieldValue("roles",e.map(({value:m})=>m))}),i.jsx(A,{submitButtonDisabled:t.isSubmitting,submitButtonText:"Send invite"})]})};export{D as default};
