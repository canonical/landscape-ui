import{R as g,B as S,o as w,C as x,a3 as R,F as v,M as N,P as d,af as L,j as n,d as o}from"./index-DVhJuAPo.js";import{F as P}from"./FileInput-B7Nmdt5W.js";import{S as q}from"./SidePanelFormButtons-kDYEusMZ.js";import{u as B}from"./WslInstancesHeader-DCtHn4sG.js";import"./SidePanelFormButtons.module-BuIu-Bem.js";import"./HeaderWithSearch-VQme5nSA.js";import"./useInstances-B2occ7OE.js";const j=[/^ubuntu$/,/^ubuntu-preview$/,/^ubuntu-[0-9]{2}\.[0-9]{2}$/],C=1,A=a=>{if(a)return new Promise((r,u)=>{const i=new FileReader;i.readAsDataURL(a),i.onload=()=>r(i.result),i.onerror=c=>u(c)})},U=()=>{const{instanceId:a}=g(),r=S(),{closeSidePanel:u}=w(),{notify:i}=x(),{createChildInstanceQuery:c,getWslInstanceNamesQuery:m}=B(),{openActivityDetails:p}=R(),{data:y,isLoading:I}=m(),{mutateAsync:b}=c,e=v({initialValues:{instanceType:"Ubuntu",cloudInit:null,instanceName:"",rootfs:""},validationSchema:N({instanceType:d().required("This field is required"),cloudInit:L().nullable().test("file-size","File size must be less than 1MB",t=>t?t.size===void 0?!1:t.size<=C*1024*1024:!0),instanceName:d().when("instanceType",{is:"custom",then:t=>t.required("This field is required").test("not-match-reserved-patterns","Instance name cannot match 'ubuntu', 'ubuntu-preview', or 'ubuntu-<dd>.<dd>'",s=>!j.some(l=>l.test(s.toLowerCase())))}),rootfs:d().url().when("instanceType",{is:"custom",then:t=>t.required("This field is required")})}),onSubmit:async t=>{try{const s=await A(t.cloudInit),l=s?s.split(",")[1]:void 0,{data:T}=await b({parent_id:parseInt(a??""),computer_name:t.instanceType==="custom"?t.instanceName:t.instanceType,rootfs_url:t.instanceType==="custom"?t.rootfs:void 0,cloud_init:l});u(),i.success({message:"You queued a new WSL instance to be installed",actions:[{label:"View details",onClick:()=>p(T)}]})}catch(s){r(s)}}}),f=[...(y?.data??[]).map(({label:t,name:s})=>({label:t,value:s}))||[],{label:"Custom",value:"custom"}],h=async t=>{await e.setFieldValue("cloudInit",t[0])},F=async()=>{await e.setFieldValue("cloudInit",null)};return n.jsxs(o.Form,{onSubmit:e.handleSubmit,noValidate:!0,children:[n.jsx(o.Select,{label:"Instance type",required:!0,disabled:I,options:f,...e.getFieldProps("instanceType"),error:e.touched.instanceType&&e.errors.instanceType?e.errors.instanceType:void 0}),e.values.instanceType==="custom"&&n.jsxs(n.Fragment,{children:[n.jsx(o.Input,{label:"Instance name",type:"text",required:!0,...e.getFieldProps("instanceName"),error:e.touched.instanceName&&e.errors.instanceName?e.errors.instanceName:void 0}),n.jsx(o.Input,{label:"Rootfs URL",type:"text",required:!0,...e.getFieldProps("rootfs"),error:e.touched.rootfs&&e.errors.rootfs?e.errors.rootfs:void 0})]}),n.jsx(P,{label:"Cloud-init",accept:".yaml",...e.getFieldProps("cloudInit"),onFileRemove:F,onFileUpload:h,help:"You can use a cloud-init configuration YAML file under 1MB to register new WSL instances. Cloud-init streamlines the setup by automating installation and configuration tasks.",error:e.touched.cloudInit&&e.errors.cloudInit?e.errors.cloudInit:void 0}),n.jsx(q,{submitButtonDisabled:e.isSubmitting,submitButtonText:"Install",submitButtonAriaLabel:"Install new WSL instance"})]})};export{U as default};
