import{H as S,y as g,l as w,z as x,V as v,J as L,B as R,F as m,a8 as q,j as s,m as a}from"./index-CTElUWT8.js";import{F as B}from"./FileInput-C5ts7XEk.js";import{S as N}from"./SidePanelFormButtons-CYT4_L0-.js";import{u as P}from"./WslInstancesHeader-MTetLxr-.js";import"./SidePanelFormButtons.module-D2P5PizG.js";import"./useInstances-DAWYsyRJ.js";import"./HeaderWithSearch-CJoY5Sdd.js";const j=[/^ubuntu$/,/^ubuntu-preview$/,/^ubuntu-[0-9]{2}\.[0-9]{2}$/],A=1,C=o=>{if(o)return new Promise((r,u)=>{const i=new FileReader;i.readAsDataURL(o),i.onload=()=>r(i.result),i.onerror=c=>u(c)})},U=()=>{const{instanceId:o}=S(),r=g(),{closeSidePanel:u}=w(),{notify:i}=x(),{createChildInstanceQuery:c,getWslInstanceNamesQuery:p}=P(),{openActivityDetails:y}=v(),{data:l,isLoading:b}=p(),{mutateAsync:f}=c,e=L({initialValues:{instanceType:"Ubuntu",cloudInit:null,instanceName:"",rootfs:""},validationSchema:R({instanceType:m().required("This field is required"),cloudInit:q().nullable().test("file-size","File size must be less than 1MB",t=>t?t.size===void 0?!1:t.size<=A*1024*1024:!0),instanceName:m().when("instanceType",{is:"custom",then:t=>t.required("This field is required").test("not-match-reserved-patterns","Instance name cannot match 'ubuntu', 'ubuntu-preview', or 'ubuntu-<dd>.<dd>'",n=>!j.some(d=>d.test(n.toLowerCase())))}),rootfs:m().url().when("instanceType",{is:"custom",then:t=>t.required("This field is required")})}),onSubmit:async t=>{try{const n=await C(t.cloudInit),d=n?n.split(",")[1]:void 0,{data:T}=await f({parent_id:parseInt(o??""),computer_name:t.instanceType==="custom"?t.instanceName:t.instanceType,rootfs_url:t.instanceType==="custom"?t.rootfs:void 0,cloud_init:d});u(),i.success({message:"You queued a new WSL instance to be installed",actions:[{label:"View details",onClick:()=>y(T)}]})}catch(n){r(n)}}}),I=[...((l==null?void 0:l.data)??[]).map(({label:t,name:n})=>({label:t,value:n}))||[],{label:"Custom",value:"custom"}],h=async t=>{await e.setFieldValue("cloudInit",t[0])},F=async()=>{await e.setFieldValue("cloudInit",null)};return s.jsxs(a.Form,{onSubmit:e.handleSubmit,noValidate:!0,children:[s.jsx(a.Select,{label:"Instance type",required:!0,disabled:b,options:I,...e.getFieldProps("instanceType"),error:e.touched.instanceType&&e.errors.instanceType?e.errors.instanceType:void 0}),e.values.instanceType==="custom"&&s.jsxs(s.Fragment,{children:[s.jsx(a.Input,{label:"Instance name",type:"text",required:!0,...e.getFieldProps("instanceName"),error:e.touched.instanceName&&e.errors.instanceName?e.errors.instanceName:void 0}),s.jsx(a.Input,{label:"Rootfs URL",type:"text",required:!0,...e.getFieldProps("rootfs"),error:e.touched.rootfs&&e.errors.rootfs?e.errors.rootfs:void 0})]}),s.jsx(B,{label:"Cloud-init",accept:".yaml",...e.getFieldProps("cloudInit"),onFileRemove:F,onFileUpload:h,help:"You can use a cloud-init configuration YAML file under 1MB to register new WSL instances. Cloud-init streamlines the setup by automating installation and configuration tasks.",error:e.touched.cloudInit&&e.errors.cloudInit?e.errors.cloudInit:void 0}),s.jsx(N,{submitButtonDisabled:e.isSubmitting,submitButtonText:"Install",submitButtonAriaLabel:"Install new WSL instance"})]})};export{U as default};
