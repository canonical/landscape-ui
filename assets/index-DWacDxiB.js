import{G as k}from"./index-5dJiSXVM.js";import{f,p,s as b,h as y,k as u,j as i,g as n}from"./index-czR6w9lm.js";import{u as g}from"./useGPGKeys-DuhhGcVe.js";import{t as m}from"./tests-CvNLOpc_.js";import{S as h}from"./SidePanelFormButtons-CfWEYvbx.js";import"./PageMain-0gnhxHMf.js";import"./useFetchOld-CEj2k1CT.js";import"./SidePanelFormButtons.module-tJTvEwdD.js";try{let t=typeof window<"u"?window:typeof global<"u"?global:typeof globalThis<"u"?globalThis:typeof self<"u"?self:{},s=new t.Error().stack;s&&(t._sentryDebugIds=t._sentryDebugIds||{},t._sentryDebugIds[s]="8bc46965-76ec-4f7c-ac16-19af5174c512",t._sentryDebugIdIdentifier="sentry-dbid-8bc46965-76ec-4f7c-ac16-19af5174c512")}catch{}const x={name:"",material:""},j=()=>{const{closeSidePanel:t}=f(),s=p(),{importGPGKeyQuery:d,getGPGKeysQuery:l}=g(),{mutateAsync:c}=d,{data:a}=l(),e=b({initialValues:x,validationSchema:y().shape({name:u().required("This field is required").test({test:m.test,message:m.message}).test({params:{getGPGKeysResponse:a},test:r=>!((a==null?void 0:a.data)??[]).map(({name:o})=>o).includes(r),message:"It must be unique within the account."}),material:u().required("This field is required").transform(r=>encodeURIComponent(r))}),onSubmit:async r=>{try{await c(r),t()}catch(o){s(o)}}});return i.jsxs(n.Form,{onSubmit:e.handleSubmit,noValidate:!0,children:[i.jsx(n.Input,{type:"text",label:"Name",required:!0,error:e.touched.name&&e.errors.name?e.errors.name:void 0,...e.getFieldProps("name")}),i.jsx(n.Textarea,{label:"Material",required:!0,rows:10,error:e.touched.material&&e.errors.material?e.errors.material:void 0,...e.getFieldProps("material")}),i.jsx(h,{submitButtonDisabled:e.isSubmitting,submitButtonText:"Import key"})]})};export{k as GPGKeysList,j as NewGPGKeyForm,g as useGPGKeys};
