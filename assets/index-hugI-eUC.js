import{l as g,e as S,f as w,m as x,j as s,g as r}from"./index-DY0yKsFY.js";import{u as v}from"./formik.esm-CtTAjn9c.js";import{c as L,a as m,g as R}from"./index.esm-BFRrLlkL.js";import{F as q}from"./FileInput-CHv-JX5g.js";import{S as N}from"./SidePanelFormButtons-BMN115EL.js";import{u as P}from"./index-CklHLT3W.js";import{u as j}from"./WslInstancesHeader-BQWvw1gT.js";import"./SidePanelFormButtons.module-DyBJG5lm.js";import"./moment-YMnkye4G.js";import"./TablePagination-CGyTcLL9.js";import"./TablePagination.module-DLVph1Z1.js";import"./usePageParams-DET2YUzV.js";import"./EmptyState-Cp7kPxIV.js";import"./SearchHelpPopup-CohKroHA.js";import"./useFetchOld-CZMB78f6.js";import"./useMutation-cdyoRliz.js";import"./PageMain-CBWka__a.js";import"./useConfirm-BmebmGkS.js";import"./NoData-DYJt2MpI.js";import"./useInstances-cT_HEEfr.js";import"./HeaderWithSearch-B-1gk42X.js";const B=[/^ubuntu$/,/^ubuntu-preview$/,/^ubuntu-[0-9]{2}\.[0-9]{2}$/],A=1,C=o=>{if(o)return new Promise((a,u)=>{const i=new FileReader;i.readAsDataURL(o),i.onload=()=>a(i.result),i.onerror=c=>u(c)})},E=()=>{const{instanceId:o}=g(),a=S(),{closeSidePanel:u}=w(),{notify:i}=x(),{createChildInstanceQuery:c,getWslInstanceNamesQuery:p}=j(),{openActivityDetails:f}=P(),{data:l,isLoading:I}=p(),{mutateAsync:b}=c,e=v({initialValues:{instanceType:"Ubuntu",cloudInit:null,instanceName:"",rootfs:""},validationSchema:L({instanceType:m().required("This field is required"),cloudInit:R().nullable().test("file-size","File size must be less than 1MB",t=>t?t.size===void 0?!1:t.size<=A*1024*1024:!0),instanceName:m().when("instanceType",{is:"custom",then:t=>t.required("This field is required").test("not-match-reserved-patterns","Instance name cannot match 'ubuntu', 'ubuntu-preview', or 'ubuntu-<dd>.<dd>'",n=>!B.some(d=>d.test(n.toLowerCase())))}),rootfs:m().url().when("instanceType",{is:"custom",then:t=>t.required("This field is required")})}),onSubmit:async t=>{try{const n=await C(t.cloudInit),d=n?n.split(",")[1]:void 0,{data:T}=await b({parent_id:parseInt(o??""),computer_name:t.instanceType==="custom"?t.instanceName:t.instanceType,rootfs_url:t.instanceType==="custom"?t.rootfs:void 0,cloud_init:d});u(),i.success({message:"You queued a new WSL instance to be installed",actions:[{label:"View details",onClick:()=>f(T)}]})}catch(n){a(n)}}}),y=[...((l==null?void 0:l.data)??[]).map(({label:t,name:n})=>({label:t,value:n}))||[],{label:"Custom",value:"custom"}],h=async t=>{await e.setFieldValue("cloudInit",t[0])},F=async()=>{await e.setFieldValue("cloudInit",null)};return s.jsxs(r.Form,{onSubmit:e.handleSubmit,noValidate:!0,children:[s.jsx(r.Select,{label:"Instance type",required:!0,disabled:I,options:y,...e.getFieldProps("instanceType"),error:e.touched.instanceType&&e.errors.instanceType?e.errors.instanceType:void 0}),e.values.instanceType==="custom"&&s.jsxs(s.Fragment,{children:[s.jsx(r.Input,{label:"Instance name",type:"text",required:!0,...e.getFieldProps("instanceName"),error:e.touched.instanceName&&e.errors.instanceName?e.errors.instanceName:void 0}),s.jsx(r.Input,{label:"Rootfs URL",type:"text",required:!0,...e.getFieldProps("rootfs"),error:e.touched.rootfs&&e.errors.rootfs?e.errors.rootfs:void 0})]}),s.jsx(q,{label:"Cloud-init",accept:".yaml",...e.getFieldProps("cloudInit"),onFileRemove:F,onFileUpload:h,help:"You can use a cloud-init configuration YAML file under 1MB to register new WSL instances. Cloud-init streamlines the setup by automating installation and configuration tasks.",error:e.touched.cloudInit&&e.errors.cloudInit?e.errors.cloudInit:void 0}),s.jsx(N,{submitButtonDisabled:e.isSubmitting,submitButtonText:"Install",submitButtonAriaLabel:"Install new WSL instance"})]})},ie=E;export{ie as default};
