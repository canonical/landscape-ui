import{j as a,g as n,p as F,q as S,f,s as h}from"./index-Bd4iIRe_.js";import{u as g,I as x,V as T,P as j,b as v,c as I}from"./index-CI2jkHVZ.js";import{F as V}from"./FileInput-BF7BK-gC.js";import{P as A}from"./PackageProfileConstraintsBlock-CdJmY5C9.js";import{u as C}from"./useInstances-CXxtUloJ.js";import{u as O}from"./useRoles-iAPrd7as.js";import{A as w}from"./AssociationBlock-9MrJgqYK.js";import{S as N}from"./SidePanelFormButtons-vMl4fSkh.js";const q=[{label:"Select constraints type",value:""},{label:"From an instance's packages",value:"instance"},{label:"From a CSV file",value:"material"},{label:"Enter manually",value:"manual"}],E="_container_1y4qx_1",B="_cta_1y4qx_7",D={container:E,cta:B},L=({formik:e})=>{const{getInstancesQuery:d}=C(),{data:i}=d(),u=(i==null?void 0:i.data.results.map(({id:o,title:l})=>({label:l,value:`${o}`})))??[];u.unshift({label:"Select instance",value:""});const p=async o=>{await e.setFieldValue("csvFile",o[0]);const l=await o[0].text();await e.setFieldValue("material",l)},c=async()=>{await e.setFieldValue("csvFile",null),await e.setFieldValue("material",""),await e.setFieldValue("isCsvFileParsed",!1)};return a.jsxs("div",{className:D.container,children:[a.jsx(n.Select,{label:"Package constraints",required:!0,options:q,...e.getFieldProps("constraintsType"),error:e.touched.constraintsType&&e.errors.constraintsType?e.errors.constraintsType:void 0}),e.values.constraintsType==="instance"&&a.jsx(n.Select,{label:"Instance",required:e.values.constraintsType==="instance",options:u,...e.getFieldProps("source_computer_id"),error:e.touched.source_computer_id&&e.errors.source_computer_id?e.errors.source_computer_id:void 0}),e.values.constraintsType==="material"&&a.jsx(V,{label:"Upload constraints",accept:".csv",...e.getFieldProps("csvFile"),onFileRemove:c,onFileUpload:p,help:'File should be formatted as either a package profile CSV file or the output of running "dpkg --get-selections" on a computer with desired packages installed.',error:e.touched.csvFile&&e.errors.csvFile||e.touched.material&&e.errors.material||void 0}),e.values.constraintsType==="manual"&&a.jsx(A,{formik:e})]})},P=()=>{const e=F(),{notify:d}=S(),{closeSidePanel:i}=f(),{getAccessGroupQuery:u}=O(),{createPackageProfileQuery:p}=g(),{data:c}=u(),o=(c==null?void 0:c.data.map(({name:s,title:r})=>({label:r,value:s})))??[];o.unshift({label:"Select access group",value:""});const{mutateAsync:l}=p,t=h({initialValues:x,onSubmit:async s=>{const r={access_group:s.access_group,description:s.description,title:s.title};s.all_computers?r.all_computers=!0:s.tags.length>0&&(r.tags=s.tags),s.constraintsType==="material"?r.material=s.material:s.constraintsType==="instance"?r.source_computer_id=s.source_computer_id:r.constraints=s.constraints.map(({constraint:m,package:_,rule:b,version:y})=>({constraint:m,package:_,rule:b,version:y}));try{await l(r),i(),d.success({message:`Profile "${s.title}" added successfully`,title:"Profile added"})}catch(m){e(m)}},validationSchema:T});return a.jsxs(n.Form,{onSubmit:t.handleSubmit,noValidate:!0,children:[a.jsx(n.Input,{type:"text",label:"Name",required:!0,...t.getFieldProps("title"),error:t.touched.title&&t.errors.title?t.errors.title:void 0}),a.jsx(n.Input,{type:"text",label:"Description",required:!0,autoComplete:"off",...t.getFieldProps("description"),error:t.touched.description&&t.errors.description?t.errors.description:void 0}),a.jsx(n.Select,{label:"Access group",...t.getFieldProps("access_group"),options:o,error:t.touched.access_group&&t.errors.access_group?t.errors.access_group:void 0}),a.jsx(w,{formik:t}),a.jsx(L,{formik:t}),a.jsx(N,{submitButtonDisabled:t.isSubmitting,submitButtonText:"Add package profile"})]})},k=Object.freeze(Object.defineProperty({__proto__:null,default:P},Symbol.toStringTag,{value:"Module"})),J=Object.freeze(Object.defineProperty({__proto__:null,PackageProfileCreateForm:P,PackageProfileHeader:v,PackageProfileList:j,PackageProfilesEmptyState:I,usePackageProfiles:g},Symbol.toStringTag,{value:"Module"}));export{J as a,k as i};
