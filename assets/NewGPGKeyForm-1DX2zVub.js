import{f,e as h,j as a,g as i}from"./index-DXs1haZl.js";import{u as b}from"./formik.esm-CwYJvJSO.js";import{c as x,a as o}from"./index.esm-FGh7VWBq.js";import{u as y}from"./useGPGKeys-VV1nPlh5.js";import{t as m}from"./tests-DFnZqbNV.js";import{S as g}from"./SidePanelFormButtons-Dtg_vQ52.js";import"./useFetchOld-DWTVWZGf.js";import"./useMutation-CoMMCR6r.js";import"./useQuery-DPA9mHwu.js";import"./SidePanelFormButtons.module-DyBJG5lm.js";const v=()=>{const{closeSidePanel:u}=f(),n=h(),{importGPGKeyQuery:d,getGPGKeysQuery:l}=y(),{mutateAsync:c,isLoading:p}=d,{data:r}=l(),e=b({initialValues:{name:"",material:""},validationSchema:x().shape({name:o().required("This field is required").test({test:m.test,message:m.message}).test({params:{getGPGKeysResponse:r},test:t=>!((r==null?void 0:r.data)??[]).map(({name:s})=>s).includes(t),message:"It must be unique within the account."}),material:o().required("This field is required").transform(t=>encodeURIComponent(t))}),onSubmit:async t=>{try{await c(t),u()}catch(s){n(s)}}});return a.jsxs(i.Form,{onSubmit:e.handleSubmit,noValidate:!0,children:[a.jsx(i.Input,{type:"text",label:"Name",required:!0,error:e.touched.name&&e.errors.name?e.errors.name:void 0,...e.getFieldProps("name")}),a.jsx(i.Textarea,{label:"Material",required:!0,rows:10,error:e.touched.material&&e.errors.material?e.errors.material:void 0,...e.getFieldProps("material")}),a.jsx(g,{submitButtonDisabled:p,submitButtonText:"Import key"})]})};export{v as default};
