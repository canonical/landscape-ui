import{c as A,e as y,f as T,a9 as v,G as d,Q as j,J as c,at as r,i as P,n as E,p as R,s as w,j as a,d as o,t as l}from"./index-BSTk3ARV.js";import{C as I}from"./CodeEditor-Ddb9tGIY.js";import{S as _}from"./SidePanelFormButtons-CaNA8xe9.js";import{u as V}from"./useRoles-CB2Qlvbp.js";import{u as q,D,S as N}from"./ScriptFormAttachments-B7bXTkGO.js";import{j as k,i as G,r as L}from"./ScriptsTabs-Cqq46K-l.js";import"./index-BwbO4ReU.js";import"./SidePanelFormButtons.module-BuIu-Bem.js";import"./AttachmentFile-Bocc7A6r.js";import"./HeaderWithSearch-CnE8ITmk.js";import"./SingleInstanceTabs.module-Cm1BYFZQ.js";import"./useExpandableRow-CP1Mx-4T.js";const O=()=>{const i=A(),u=y(),{mutateAsync:m,isPending:h}=T({mutationKey:["scripts","create"],mutationFn:async p=>i.get("CreateScript",{params:p}),onSuccess:async()=>u.invalidateQueries({queryKey:["scripts"]})});return{createScript:m,isCreatingScript:h}},B={title:"",code:"",access_group:v,attachments:{first:null,second:null,third:null,fourth:null,fifth:null},attachmentsToRemove:[]},M=()=>d().shape({title:c().required("This field is required"),access_group:c().nullable(),code:c().test({name:"required",message:"This field is required",test:i=>!!i}),attachments:d().shape({first:r().nullable(),second:r().nullable(),third:r().nullable(),fourth:r().nullable(),fifth:r().nullable()}),attachmentsToRemove:j().of(c())}),ae=()=>{const i=P.useRef(null),{closeSidePanel:u}=E(),m=R(),{getAccessGroupQuery:h}=V(),{createScript:p}=O(),{createScriptAttachment:f}=q(),{data:g}=h(),S=(g?.data??[]).map(t=>({label:t.title,value:t.name})),b=async t=>{const n=Object.values(t.attachments).filter(s=>s!==null);try{const s=await p(k(t));n.length&&await Promise.all(await G({attachments:n,createScriptAttachment:f,script_id:s.data.id})),u()}catch(s){m(s)}},e=w({initialValues:B,validationSchema:M(),onSubmit:b}),C=async({target:{files:t}})=>{if(!t)return;const[n]=t,s=e.setFieldValue("code",await n.text());if(e.values.title){await s;return}await Promise.all([e.setFieldValue("title",L(n.name)),s])},x=async t=>{await e.setFieldValue("code",t)},F=()=>i.current?.click();return a.jsxs(o.Form,{onSubmit:e.handleSubmit,noValidate:!0,children:[a.jsx(o.Input,{type:"text",label:"Title",required:!0,...e.getFieldProps("title"),error:l(e,"title")}),a.jsx("input",{ref:i,className:"u-hide",type:"file",onChange:C}),a.jsx(I,{label:"Code",value:e.values.code,onChange:x,error:l(e,"code"),required:!0,defaultValue:D,headerContent:a.jsxs(o.Button,{className:"u-no-margin--bottom",appearance:"base",hasIcon:!0,onClick:F,type:"button",children:[a.jsx(o.Icon,{name:"upload"}),a.jsx("span",{children:"Populate from file"})]})}),a.jsx(o.Select,{label:"Access group",...e.getFieldProps("access_group"),options:S,error:l(e,"access_group")}),a.jsxs(a.Fragment,{children:[a.jsx("h5",{children:"List of attachments"}),a.jsx("p",{className:"u-text--muted",children:"Attachments that will be sent along with the script. You can attach up to 5 files, for a maximum of 1.00MB. Filenames must be unique. On the client, the attachments will be placed in the directory whose name is accessible through the environment variable LANDSCAPE_ATTACHMENTS. They'll be deleted once the script has been run."})]}),a.jsx(N,{attachments:e.values.attachments,attachmentsToRemove:e.values.attachmentsToRemove,getFileInputError:t=>l(e,["attachments",t]),initialAttachments:[],onFileInputChange:t=>async n=>e.setFieldValue(`attachments.${t}`,n.target.files?.[0]??null),onInitialAttachmentDelete:t=>{e.setFieldValue("attachmentsToRemove",[...e.values.attachmentsToRemove,t])}}),a.jsx(_,{submitButtonText:"Create script",submitButtonDisabled:e.isSubmitting})]})};export{ae as default};
