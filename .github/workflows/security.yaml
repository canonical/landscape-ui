name: Vulnerability Scan

on:
  workflow_dispatch: # Allows manual triggering
  schedule:
    - cron: "0 2 * * 1" # Run weekly at 2 AM on Monday
  pull_request:
    paths:
      - 'Dockerfile'
      - '.github/workflows/security.yaml'

permissions:
  contents: read
  packages: write
  issues: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-image:
    name: Build Docker Image
    runs-on: ubuntu-latest
    outputs:
      image_name: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=sha,prefix=pr-${{ github.event.number }}-
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  scan-and-report:
    name: Scan and Report
    needs: build-image
    runs-on: [self-hosted, self-hosted-linux-amd64-jammy-private-endpoint-medium]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install secscan client
        run: sudo snap install canonical-secscan-client

      - name: Run security scan
        # We use continue-on-error so that even if the scan command fails,
        # we can proceed to the 'Create Issue on Failure' step.
        continue-on-error: true
        id: scan
        run: |
          secscan-client --batch submit \
            --ssdlc-product-name 'landscape-ui' \
            --ssdlc-cycle '25.10' \
            --ssdlc-product-version '1.17.0' \
            --ssdlc-product-channel 'edge' \
            --scanner trivy \
            --type container-image \
            --format oci \
            "${{ needs.build-image.outputs.image_name }}" \
            --wait-and-print > secscan-results.txt

      - name: Check for high/critical vulnerabilities
        id: vulnerability_check
        run: |
          # This step fails if HIGH or CRITICAL vulnerabilities are found in the results.
          if grep -q -E 'CRITICAL|HIGH' secscan-results.txt; then
            echo "::error::High or Critical vulnerabilities found."
            exit 1
          else
            echo "Success: No high or critical vulnerabilities detected."
          fi
        # This condition ensures this check runs only if the scan step succeeded.
        if: steps.scan.outcome == 'success'

      - name: Upload Scan Results on Success
        # This step only runs if the entire job has been successful so far.
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: secscan-results
          path: secscan-results.txt

      - name: Create Issue on Failure
        # This step runs if any of the previous steps have failed.
        if: failure()
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Vulnerability scan found high/critical issues or failed to run." > issue-body.txt
          echo "" >> issue-body.txt
          echo "### Scan Results" >> issue-body.txt
          echo '```' >> issue-body.txt
          if [ -f secscan-results.txt ]; then
            cat secscan-results.txt >> issue-body.txt
          else
            echo "Scan results file not found. The scan step may have failed." >> issue-body.txt
          fi
          echo '```' >> issue-body.txt
          
          gh issue create --title "High/Critical Vulnerabilities Detected in Landscape UI" --body-file issue-body.txt --label "security,bug"