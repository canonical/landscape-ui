name: Vulnerability Scan

on:
  workflow_dispatch: # Allows manual triggering
  schedule:
    - cron: "0 2 * * 1" # Run weekly at 2 AM on Monday
  pull_request:
    paths:
      - 'Dockerfile'
      - '.github/workflows/security.yaml'

permissions:
  contents: read
  packages: write
  issues: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-image:
    name: Build Docker Image
    runs-on: ubuntu-latest
    outputs:
      image_name: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=sha,prefix=pr-${{ github.event.number }}-
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  scan-and-report:
    name: Scan and Report
    needs: build-image
    runs-on: [self-hosted, self-hosted-linux-amd64-jammy-private-endpoint-medium]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Scan container image with Secscan
        id: scan
        uses: ./.github/actions/secscan.yaml
        with:
          image-to-scan: ${{ needs.build-image.outputs.image_name }}
          ssdlc-product-name: 'landscape-ui'
          ssdlc-cycle: '25.10'
          ssdlc-product-version: '1.17.0'
          ssdlc-product-channel: 'edge'

      - name: Upload Scan Results on Success
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: secscan-results
          path: ${{ steps.scan.outputs.results-file }}

      - name: Create Issue on Failure
        if: failure()
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Vulnerability scan found high/critical issues." > issue-body.txt
          echo "The workflow failed. Please review the scan results from the failed run." >> issue-body.txt
          echo "You can find the logs in the 'Scan container image with Secscan' step of the 'Scan and Report' job." >> issue-body.txt
          
          gh issue create --title "High/Critical Vulnerabilities Detected in Landscape UI" --body-file issue-body.txt --label "security,bug"